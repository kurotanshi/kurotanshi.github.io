<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[[VueJS] V1 與 V2 元件實體之差異]]></title>
      <url>http://kuro.tw/posts/2016/10/03/VueJS-V1-%E8%88%87-V2-%E5%85%83%E4%BB%B6%E5%AF%A6%E9%AB%94%E4%B9%8B%E5%B7%AE%E7%95%B0/</url>
      <content type="html"><![CDATA[<p>狂賀！ <a href="https://github.com/vuejs/vue/releases/tag/v2.0.0" title="Vue 2.0" target="_blank" rel="external">Vue 2.0</a> 終於正式發佈！</p>
<p>關於 Vue 2.0 的新特性，作者也在官方 Blog - <a href="https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.n0m3yjfmp" title="Vue 2.0 is Here!" target="_blank" rel="external">Vue 2.0 is Here!</a> (<a href="http://jiongks.name/blog/vue-2-is-here/" title="Vue 2.0 来了！" target="_blank" rel="external">中文翻譯</a>) 一文中敘述地相當詳細，這裡就不多說。</p>
<p>如果你也與我一樣是從 V1 就開始接觸的開發者，一定都知道 VueJS 最核心的一部分是 Component，而 Component 是由實體 (Vue Instance) 來實作。
在這篇文章，我們就來談談 Vue 1.x 與 2.x 元件實體的差異。</p>
<hr>

<h3 id="Vue-2-0-元件實體註冊"><a href="#Vue-2-0-元件實體註冊" class="headerlink" title="Vue 2.0 元件實體註冊"></a>Vue 2.0 元件實體註冊</h3><p><img src="/static/img/vue-instance.png" alt="tree of components"></p>
<p>像上面這樣的網站，我們可以將它抽象化為一棵「元件樹」，而每個元件樹都會有個根節點，或稱為根實體 (root Vue instance)。</p>
<p>那麼，每個 Vue 元件樹的根實體其實是透過 <code>Vue</code> 這個建構函式所產生：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="comment">// options</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>將 Vue 元件與實體 DOM 結合的方式有兩種，一種是直接寫在 <code>el</code> option 內：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  el: <span class="string">'#app'</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>而另一種方式則是透過 <code>$mount</code> 來指定節點：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="comment">// options without 'el'</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line">vm.$mount(<span class="string">'#app'</span>);</div></pre></td></tr></table></figure></p>
<p>這部分跟 Vue 1.x 的註冊是完全一樣的，但是需要注意的是，在 vue 1.x 允許開發者以 <code>&lt;body&gt;</code> 或 <code>&lt;html&gt;</code> 作為根實體的掛載點，
但<span style="color: #f00">到了 VueJS 2.0 後，只能透過 <strong>獨立的節點掛載</strong> </span>，如: div 等。 否則會產生錯誤，警告訊息如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">“Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.“</div></pre></td></tr></table></figure>
<p>換成用獨立的 DOM 節點，如 <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>，就可以正常運作了。</p>
<hr>

<h3 id="Vue-2-0-元件實體的生命週期"><a href="#Vue-2-0-元件實體的生命週期" class="headerlink" title="Vue 2.0 元件實體的生命週期"></a>Vue 2.0 元件實體的生命週期</h3><p><img alt="Vue 2.0 Lifecycle Diagram" title="Vue 2.0 Lifecycle Diagram" src="/static/img/vue2-lifecycle.png" height="400">
<span style="font-size: 12px;">圖片來源： <a href="http://vuejs.org/guide/instance.html#Instance-Lifecycle-Hooks" target="_blank" rel="external">Vue 2.0 Guide: Instance Lifecycle Hooks</a></span></p>
<p>基本上 Vue 2.0 實體生命週期中，大部分的階段都與 Vue 1.x 是一樣的，最大的不同在於 lifecycle hook 名稱的改變，以及在元件被掛載 <code>mounted</code> 之後，還新增了 <code>beforeUpdate</code> 以及 <code>updated</code> 這兩組偵測更新的 hook。</p>
<p>vue 1.x 的 <code>init</code> 變成 <code>beforeCreate</code> ， <code>beforeCompiled</code> 改為 <code>beforeMount</code>。 而原本的 <code>complied</code> 與 <code>ready</code> 則是統一收斂成 <code>mounted</code>。</p>
<p>另外需要注意的是，<span style="color: #f00"><strong>若元件本身是透過 server-side rendering 的話，除了 <code>beforeCreate</code> 以及 <code>created</code> 以外的所有 hook 都不會被呼叫</strong></span>  <a href="https://vuejs.org/api/#Options-Lifecycle-Hooks" target="_blank" rel="external">(參考資料)</a>。</p>
<p>有關元件 V-DOM 的重新渲染與更新後面再提，其他部分則與 Vue 1.x 大同小異。</p>
<p><hr></p>
<h3 id="Vue-2-0-元件與模板的編譯-Render-Function"><a href="#Vue-2-0-元件與模板的編譯-Render-Function" class="headerlink" title="Vue 2.0 元件與模板的編譯 - Render Function"></a>Vue 2.0 元件與模板的編譯 - Render Function</h3><p>在大部分情況下，透過元件的 <code>template</code> 屬性，或是直接寫在 HTML 中就已經足夠操作你的元件了。
不過若是你想完全透過 JavaScript 來操作你的元件，那麼可以使用 render 這個 function 直接來寫底層的 virtual-DOM 來取代 <code>template</code> 屬性。
VueJS 2.0 的 virtual DOM 機制，是採用 <a href="https://github.com/snabbdom/snabbdom" title="snabbdom" target="_blank" rel="external">snabbdom</a> 這個 virtual DOM 的 library 來實作的。</p>
<p>可以使用 <code>createElement</code> 這個 function 來建立你的元件內容：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// @returns &#123;VNode&#125;</span></div><div class="line">createElement(</div><div class="line">  <span class="comment">// &#123;String | Object | Function&#125;</span></div><div class="line">  <span class="comment">// An HTML tag name, component options, or function</span></div><div class="line">  <span class="comment">// returning one of these. Required.</span></div><div class="line">  <span class="string">'div'</span>,</div><div class="line">  <span class="comment">// &#123;Object&#125;</span></div><div class="line">  <span class="comment">// A data object corresponding to the attributes</span></div><div class="line">  <span class="comment">// you would use in a template. Optional.</span></div><div class="line">  &#123;</div><div class="line">    <span class="comment">// (see details in the next section below)</span></div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// &#123;String | Array&#125;</span></div><div class="line">  <span class="comment">// Children VNodes. Optional.</span></div><div class="line">  [</div><div class="line">    createElement(<span class="string">'h1'</span>, <span class="string">'hello world'</span>)</div><div class="line">    createElement(MyComponent, &#123;</div><div class="line">      props: &#123;</div><div class="line">        someProp: <span class="string">'foo'</span></div><div class="line">      &#125;</div><div class="line">    &#125;),</div><div class="line">    <span class="string">'bar'</span></div><div class="line">  ]</div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>官方也提供了一個完整的 render function 範例：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> getChildrenTextContent = <span class="function"><span class="keyword">function</span> (<span class="params">children</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> children.map(<span class="function"><span class="keyword">function</span> (<span class="params">node</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> node.children</div><div class="line">      ? getChildrenTextContent(node.children)</div><div class="line">      : node.text</div><div class="line">  &#125;).join(<span class="string">''</span>)</div><div class="line">&#125;</div><div class="line">Vue.component(<span class="string">'anchored-heading'</span>, &#123;</div><div class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params">createElement</span>) </span>&#123;</div><div class="line">    <span class="comment">// create kebabCase id</span></div><div class="line">    <span class="keyword">var</span> headingId = getChildrenTextContent(<span class="keyword">this</span>.$slots.default)</div><div class="line">      .toLowerCase()</div><div class="line">      .replace(<span class="regexp">/\W+/g</span>, <span class="string">'-'</span>)</div><div class="line">      .replace(<span class="regexp">/(^\-|\-$)/g</span>, <span class="string">''</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> createElement(</div><div class="line">      <span class="string">'h'</span> + <span class="keyword">this</span>.level,</div><div class="line">      [</div><div class="line">        createElement(<span class="string">'a'</span>, &#123;</div><div class="line">          attrs: &#123;</div><div class="line">            name: headingId,</div><div class="line">            href: <span class="string">'#'</span> + headingId</div><div class="line">          &#125;</div><div class="line">        &#125;, <span class="keyword">this</span>.$slots.default)</div><div class="line">      ]</div><div class="line">    )</div><div class="line">  &#125;,</div><div class="line">  props: &#123;</div><div class="line">    level: &#123;</div><div class="line">      type: <span class="built_in">Number</span>,</div><div class="line">      required: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>當然，你可能跟我一樣覺得一層又一層的 <code>createElement</code> 看了總是讓人厭煩，你也可以透過這個 Plugin: <a href="https://github.com/vuejs/babel-plugin-transform-vue-jsx" target="_blank" rel="external">babel-plugin-transform-vue-jsx</a>，來做 JSX 語法的轉換，如果你曾是 react 應用程式的開發者，應該對 JSX 語法不陌生。 寫起來會像這樣：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> AnchoredHeading <span class="keyword">from</span> <span class="string">'./AnchoredHeading.vue'</span></div><div class="line"></div><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">  el: <span class="string">'#demo'</span>,</div><div class="line">  render (h) &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;AnchoredHeading level=&#123;1&#125;&gt;</div><div class="line">        &lt;span&gt;Hello&lt;/span&gt; world!</div><div class="line">      &lt;/AnchoredHeading&gt;</div><div class="line">    )</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>在預設情況中，VueJS 2.0 會將 <code>template</code> 內的 HTML 透過 parse 轉換成 AST，再自動轉換優化成 render function 去建立 virtual DOM。 在建立 virtual DOM 之後，透過 observe 機制與資料進行綁定，再 compile 成實體的 DOM 並渲染至網頁上：</p>
<p><img src="/static/img/vue2-rendering-flow.png">
<span style="font-size: 12px;">參考資料與圖片來源： <a href="https://speakerdeck.com/kazupon/next-vue-dot-js-2-dot-0" target="_blank" rel="external">Next Vue.js 2.0 by kazupon</a></span></p>
<p>前面說過，VueJS 2.0 會將 <code>template</code> 內的 HTML 自動編譯成 render function，下面這是官方文件以 <code>Vue.compile</code> 提供的 demo：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- template --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>I'm a template!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"message"</span>&gt;</span></div><div class="line">    &#123;&#123; message &#125;&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span></div><div class="line">    No message.</div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// render:</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">anonymous</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">with</span>(<span class="keyword">this</span>)&#123;<span class="keyword">return</span> _h(<span class="string">'div'</span>,[_m(<span class="number">0</span>),(message)?_h(<span class="string">'p'</span>,[_s(message)]):_h(<span class="string">'p'</span>,[<span class="string">"No message."</span>])])&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// staticRenderFns:</span></div><div class="line">_m(<span class="number">0</span>): <span class="function"><span class="keyword">function</span> <span class="title">anonymous</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">with</span>(<span class="keyword">this</span>)&#123;<span class="keyword">return</span> _h(<span class="string">'h1'</span>,[<span class="string">"I'm a template!"</span>])&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><hr></p>
<h3 id="Vue-2-0-元件的追蹤變化"><a href="#Vue-2-0-元件的追蹤變化" class="headerlink" title="Vue 2.0 元件的追蹤變化"></a>Vue 2.0 元件的追蹤變化</h3><p>最後，我們來看看元件內狀態的追蹤變化。有寫過 VueJS 1.x 的朋友應該知道，元件實體內有個 option 叫 <code>data</code>，
這個 <code>data</code> 物件就是用來存放元件內狀態/資料的地方。</p>
<p>與 Vue 1.x 相同的地方是，<code>data</code> 物件透過 <code>Object.defineProperty()</code> 來為元件內各屬性設定 「getter」與「setter」。
就在 data 屬性被存取修改時，會透過 getter/setter 來通知物件內屬性的變化，當先前設定好的 setter 被呼叫的時候，會去觸發 watcher 重新計算，也就會導致 DOM 的更新與重新渲染。</p>
<p>與 Vue 1.x 不同的是，Vue 1.x 是透過 directive 來重新渲染 DOM 內容：</p>
<p><img src="/static/img/vue1-watcher.png"></p>
<p>而 Vue 2.0 在通知 watcher 更新時，會去呼叫前面介紹的 「render function」與更新後的 data 去做更新後再次渲染，概念與 1.x 大致相同。
但更新 DOM 的手法不同，減少了不必要的比對，也因此大幅度提升了效能。</p>
<p><img src="/static/img/vue2-watcher.png"></p>
<hr>

<p style="font-size: 1.2em; line-height: 2;">
<a title="vue.js 2.0 入門實戰" href="https://5xruby.tw/talks/vuejs-3" target="_blank" rel="external"><img title="vue.js 2.0 入門實戰" style="border: none; margin: 0 auto;" src="/static/img/5xruby-vue.png"></a>
工商服務時間： 10/15 小弟在台北開了以<span style="color: #f00;"> VueJS 2.0 </span>為基礎的工作坊課程，
<br>課程傳送門: <a href="https://5xruby.tw/talks/vuejs-3" target="_blank" rel="external">VUE.JS 2.0 入門實戰</a> <br>
如果你也對 VueJS 有興趣，或是想進入 VueJS 2.0 卻不知該從何開始，歡迎一起參加。 😃
</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VueJS 2.0 升級小幫手: Vue migration helper]]></title>
      <url>http://kuro.tw/posts/2016/09/30/Vue-2-0-%E5%8D%87%E7%B4%9A%E5%B0%8F%E5%B9%AB%E6%89%8B-Vue-migration-helper/</url>
      <content type="html"><![CDATA[<p>Vue JS 自今年四月 (2016/04) 發佈 Vue 2.0 preview 版本至今也有五個月了，在新舊版本的交替之中，開發者最關心的一定是「<strong>我的專案能不能升到 Vue 2.0</strong>」、「<strong>升上去會不會爆</strong>」、「<strong>專案該用那個版本來開發</strong>」，<del>「聽說隔壁那個 ng 升級幾乎等於砍掉重練」</del> 之類的問題。</p>
<p>不過幸好，Vue 1.0 與 Vue 2.0 有 90% 的 API 是相同的，過去在 Vue 1.x 的核心概念到 Vue 2.0 一樣可以沿用，而且又多了些新特性。</p>
<p>這裡有一份官方的<a href="http://rc.vuejs.org/guide/migration.html" title="Migration from Vue 1.x" target="_blank" rel="external">升級建議</a>，有點長，如果沒有耐心讀的話，沒關係，這裡介紹你好物: <br> <strong><span style="color: #f00;">Vue migration helper</span></strong>。</p>
<p>傳說中的升級小幫手 Vue migration helper: <a href="https://github.com/vuejs/vue-migration-helper" target="_blank" rel="external">https://github.com/vuejs/vue-migration-helper</a></p>
<p>使用方式很簡單，打開 terminal 透過 npm 安裝後，在你的專案目錄下執行 vue-migration-helper，小幫手就會幫你掃描整份專案，然後給你修改的建議了。</p>
<p>完整的安裝與使用方式：
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># install</div><div class="line">$ npm install --global git://github.com/vuejs/vue-migration-helper.git</div><div class="line"></div><div class="line"># navigate to a Vue 1.x project directory</div><div class="line">$ cd path/to/my-vue-project</div><div class="line"></div><div class="line"># scan all files in the current directory</div><div class="line">$ vue-migration-helper</div></pre></td></tr></table></figure></p>
<p>拿之前的某份範例試試，就像這樣：</p>
<p><del>花惹發</del>，滿坑滿谷的升級建議
<img src="/static/img/vue-migration-demo.png" alt="migration"></p>
<p>依照 migration helper 給的建議一一修正後，再次執行專案，檢查一下 console，是否有噴錯，如果沒有錯誤，那麼專案的升級也就差不多了。</p>
<p>不過要注意，目前 Vue migration helper 還在 beta 階段，如果未來要再更新至新版的話，直接再次執行 <code>npm install --global git://github.com/vuejs/vue-migration-helper.git</code> 重新安裝一次就好。</p>
<p>最後，鄉親啊，如果你正要開啟新專案，建議現在就可以直接從 Vue 2.0 進入喔！</p>
<p><hr></p>
<p style="font-size: 1.2em; line-height: 2;">
<a title="vue.js 2.0 入門實戰" href="https://5xruby.tw/talks/vuejs-3" target="_blank" rel="external"><img title="vue.js 2.0 入門實戰" style="border: none; margin: 0 auto;" src="/static/img/5xruby-vue.png"></a>
工商服務時間： 10/15 小弟在台北開了以<span style="color: #f00;"> VueJS 2.0 </span>為基礎的工作坊課程，
<br>課程傳送門: <a href="https://5xruby.tw/talks/vuejs-3" target="_blank" rel="external">VUE.JS 2.0 入門實戰</a> <br>
如果你也對 VueJS 有興趣，或是想進入 VueJS 2.0 卻不知該從何開始，歡迎一起參加。 😃
</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[Vue.js] 在 v-for 列表中透過 filter 完成搜尋與分頁的功能]]></title>
      <url>http://kuro.tw/posts/2016/05/30/vuejs-in-v-for-through-the-filter-in-the-list-complete-search-and-page-functions/</url>
      <content type="html"><![CDATA[<p>最近 <a href="https://vuejs.org/" target="_blank" rel="external">Vue.js</a> 正夯，所以手上幾個東西打算用這個來改寫，關於 Vue.js 的基本介紹可以參考小弟的投影片，這裡就不再贅述。</p>
<iframe src="//www.slideshare.net/slideshow/embed_code/key/DLQDvLrRSNunsY" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:10px; max-width: 100%;" allowfullscreen> </iframe>

<p>有用過 Vue.js 開發的朋友一定知道它提供的 filter 功能十分強大，在 <code>v-for</code> 列表中使用 <code>filterBy</code> 可以在一行內完成列表搜尋的功能：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"filter-by-example"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"n"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 透過 input 欄位的 v-model n 與 user.name 做模糊比對 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"user in users | filterBy n in 'name'"</span>&gt;</span></div><div class="line">      &#123;&#123; user.name &#125;&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>若是要限制顯示的筆數也能用 <code>limitBy</code> 做到，進而完成分頁的功能。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 只顯示前 10 個元素 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"item in items | limitBy 10"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 顯示第 5 到 15 筆元素--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"item in items | limitBy 10 5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>這次遇到的問題是這樣的，如果我們想要同時完成「搜尋」與「分頁」的需求，光靠 <code>filterBy</code> 與 <code>limitBy</code> 就不是那麼容易做到，還好 Vue.js 提供了<a href="http://vuejs.org/guide/custom-filter.html" target="_blank" rel="external">自訂 filter</a> 的功能：先用 filterBy 過濾，再透過自訂 recordLength 記錄過濾後的資料數量，最後再用 limitBy 搭配頁籤切換頁面。
小心 filter 的順序，filter 會依序執行，然後再繼續下個 filter。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">" r in rows</span></span></div><div class="line">             | filterBy filter_name in 'name'</div><div class="line">             | recordLength 'filteredRowCount'</div><div class="line">             | limitBy countOfPage pageStart "&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>......<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p>然後是自定的 filter <code>recordLength</code>：
result 代表傳入的資料， key 則是從 view 帶入的參數，這個範例是 <code>filteredRowCount</code>。</p>
<p>這裡透過 <code>vm.$set</code> 來將過濾後的數量指定至 vue 實體，以便可以直接在 Vue 實體使用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Vue.filter(<span class="string">'recordLength'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">result, key</span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.$set(key, result.length);</div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>最後在頁籤的部分，我們就可以簡單透過 <code>filter_name</code> 欄位是否空白來切換是否透過 <code>filteredRowCount</code> 計算總頁數:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">totalPage: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">if</span>( <span class="keyword">this</span>.filter_name.trim() === <span class="string">''</span> ) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.ceil(<span class="keyword">this</span>.rows.length / <span class="keyword">this</span>.countOfPage);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.ceil(<span class="keyword">this</span>.filteredRowCount / <span class="keyword">this</span>.countOfPage);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>完整的 <a href="http://jsbin.com/bimawidora/1/edit?html,js,output" target="_blank" rel="external">demo</a> 如下:</p>
<p><a class="jsbin-embed" href="http://jsbin.com/bimawidora/embed?output" target="_blank" rel="external">JS Bin on jsbin.com</a><script src="http://static.jsbin.com/js/embed.min.js?3.35.12"></script></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用 d3.js 製作 responsive 的長條圖]]></title>
      <url>http://kuro.tw/posts/2015/12/20/use-d3js-to-create-responsive-histogram/</url>
      <content type="html"><![CDATA[<p>利用 d3.js 我們可以很輕易地產生我們想要的圖表，以最常見的長條圖為例，只要透過 scale (比例尺) 與 axis (軸線)，再加上一點 SVG 的基礎知識，像這樣的長條圖一下子就可以生成。</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/2V8wHgLUTEawU5iJstYS_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%8812.21.25.png" alt="螢幕快照 2015-12-20 下午12.21.25.png">
[<a href="http://kurotanshi.github.io/d3js-samples/rwd/rwd.html" title="長條圖範例" target="_blank" rel="external">Code</a>]</p>
<p>但是，像這樣尺寸的圖表，往往都會因為太大而不適合在手機螢幕上呈現。還好 SVG 有著向量圖形的特性，可以自由縮放，這篇就來簡單介紹 d3.js 的長條圖如何也能做出 rwd 的效果。</p>
<p>在上面的程式碼內，我們可以看到，原先設定的寬高是寫死的 960 與 500 (未扣除邊界)
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> margin = <span class="number">40</span>,</div><div class="line">    width = <span class="number">960</span> - margin*<span class="number">2</span>,</div><div class="line">    height = <span class="number">500</span> - margin*<span class="number">2</span>;</div></pre></td></tr></table></figure></p>
<p>所以第一步，我們先將外層的 <code>.content</code> 元素設定成寬高 100%，然後把原先寫死的寬高改成由程式去抓取實際的寬高
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.content</span>&#123;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">min-width</span>: <span class="number">300px</span>;</div><div class="line">  <span class="attribute">max-width</span>: <span class="number">960px</span>;</div><div class="line">  <span class="attribute">max-height</span>: <span class="number">500px</span>;</div><div class="line">  <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 將尺寸改成即時取得的寬高</span></div><div class="line">width = <span class="built_in">parseInt</span>(d3.select(<span class="string">".content"</span>).style(<span class="string">"width"</span>), <span class="number">10</span>) - margin*<span class="number">2</span>;</div><div class="line">height = <span class="built_in">parseInt</span>(d3.select(<span class="string">".content"</span>).style(<span class="string">"height"</span>), <span class="number">10</span>) - margin*<span class="number">2</span>;</div></pre></td></tr></table></figure>
<p>然後我們將瀏覽器縮小之後重整，結果像這樣：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/Jrbqo6EaTJswhfBQUF6g_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%881.23.36.png" alt="螢幕快照 2015-12-20 下午1.23.36.png">
[<a href="http://kurotanshi.github.io/d3js-samples/rwd/rwd2.html" title="長條圖範例2" target="_blank" rel="external">Code</a>]</p>
<p>可以看到，這個時候因為畫面的寬高已經不是寫死的了，所以會依「繪製圖形當下」的寬高去做比例的修正。這時我們已經完成了長條圖 RWD 的第一步了。</p>
<p>這時要是將行動裝置螢幕橫擺後，比例並不會依照橫擺之後有所不同，如果要使用者不斷地重整頁面，這就太不友善了。所以，我們要在瀏覽器上加上 <code>resize</code> 事件，並將繪製圖形的動作通通封裝至 rendering 這個 function 內。</p>
<p>這個時候的程式架構會像這樣：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> svg = d3.select(<span class="string">'.svg'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 將繪製動作包裝至 function 內</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rendering</span>(<span class="params"></span>) </span>&#123;</div><div class="line">   <span class="comment">// 將繪製的程式碼通通搬到裡面</span></div><div class="line">   <span class="comment">// 內略</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 將 window 綁定 resize 事件，並重新繪製圖型</span></div><div class="line">d3.select(<span class="built_in">window</span>).on(<span class="string">'resize'</span>, rendering);</div><div class="line"></div><div class="line"><span class="comment">// 首次繪製</span></div><div class="line">rendering();</div></pre></td></tr></table></figure></p>
<p>所以，這個時候，我們可以任意拉放瀏覽器的尺寸
像這樣
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/eTI8r7EXSQWaH80HZuKH_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%881.39.54.png" alt="螢幕快照 2015-12-20 下午1.39.54.png"></p>
<p>或是這樣
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/NMpkG3LeTOWaYaNf9pYC_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%881.40.01.png" alt="螢幕快照 2015-12-20 下午1.40.01.png"></p>
<p>[<a href="http://kurotanshi.github.io/d3js-samples/rwd/rwd3.html" title="長條圖範例3" target="_blank" rel="external">Code</a>]
都是沒有問題的。</p>
<p>這份長條圖到目前為止已經可以說是好棒棒了。
可是不曉得有沒有人發現，在最後那張橫擺的 y 軸刻度實在太過擁擠，其實是不容易閱讀的:
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/VA6ir3TRyutauy6ALqdH_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%881.42.43.png" alt="螢幕快照 2015-12-20 下午1.42.43.png"></p>
<p>我們可以怎麼樣更優化呢？</p>
<p>這時候就要利用 d3.js 提供的 <code>tick()</code> 功能，來為我們調整 y 軸上的刻度。
只要在 y 軸上加上 tick ，像這樣:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// y 軸加上 ticks</span></div><div class="line"><span class="keyword">var</span> yAxis = d3.svg.axis()</div><div class="line">      .scale(yScale2)</div><div class="line">      .orient(<span class="string">"left"</span>)</div><div class="line">      .ticks(<span class="built_in">Math</span>.max(height/<span class="number">50</span>, <span class="number">2</span>));</div></pre></td></tr></table></figure>
<p><code>Math.max</code> 會回傳兩個指定數字中較大的一個，而 <code>ticks()</code> 則是設定軸線上刻度的數量。</p>
<p>所以經過剛剛的設定，當圖形的高度大於 100px 的時候，圖表每 50px 會有一個刻度，而圖形高度小於或等於 100px 時，則至少會有兩個刻度，像這樣：</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/Mz3vq9BKRZ2dkSd5SP6W_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%881.54.29.png" alt="螢幕快照 2015-12-20 下午1.54.29.png"></p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/swZcbhnQPmhiWQBwTbDG_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-12-20%20%E4%B8%8B%E5%8D%881.55.08.png" alt="螢幕快照 2015-12-20 下午1.55.08.png"></p>
<p>[<a href="http://kurotanshi.github.io/d3js-samples/rwd/rwd4.html" title="長條圖範例4" target="_blank" rel="external">Code</a>]</p>
<p>實際用手機試試：</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/mM3agzeTGGGdM2p4YjZq_2015-12-20%2003.33.30.png" alt="2015-12-20 03.33.30.png">
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/378297/j4wccnAOTZWhLzubTUDw_2015-12-20%2003.33.43.png" alt="2015-12-20 03.33.43.png"></p>
<p>透過這樣的修正，就可以讓圖表變得更好閱讀了。</p>
<p>以上，我們只要做簡單的小調整，就可以讓現有的 d3 長條圖做到有 RWD 的效果。</p>
<p>但是要注意的是，不是所有圖表都合適在手機螢幕上呈現，在設計時也需要把這些考慮進去，是要為手機版本另外做一個新的圖表，或是做 RWD 的設計，就看使用的情境以及想表達的意義來決定囉。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用 Google Fusion Table，不用寫 code 也可以產生主題地圖]]></title>
      <url>http://kuro.tw/posts/2015/10/15/using-google-fusion-table-without-writing-code-or-topic-maps/</url>
      <content type="html"><![CDATA[<p>感謝台北市政府以及<a href="https://www.facebook.com/photo.php?fbid=10204828212414899&amp;set=a.1357755313713.2044236.1526408898&amp;type=3" target="_blank" rel="external">相關人士的努力</a>，在十月中旬的時候，台北市 open data 平台又開放了「<a href="http://data.taipei/opendata/datalist/datasetMeta?oid=68785231-d6c5-47a1-b001-77eec70bec02" target="_blank" rel="external">台北市住宅竊盜點位資訊</a>」這樣的資料，雖然很多人戲稱房價又要下跌了，但是老話一句，身為<del>有良心的開發者，當然居住安全比房價什麼的還要重要得多</del>。</p>
<p>那麼，拿到這份資料我們可以怎麼玩呢?
剛好這份資料的格式是 CSV (Comma-Separated Values，一種由逗點分隔的純文字資料格式)，所以本篇就來介紹如何透過 <a href="https://support.google.com/fusiontables/answer/2571232" target="_blank" rel="external">Google Fusion Table</a> 來讓我們不必寫任何的 code ，也可以建立主題地圖。</p>
<p>首先先到<a href="http://data.taipei/opendata/datalist/datasetMeta?oid=68785231-d6c5-47a1-b001-77eec70bec02" target="_blank" rel="external">台北市住宅竊盜點位資訊</a>，點一下「使用資料」將所需的檔案下載下來，會得到一份 csv 檔案。</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/UsvTpRmSDWhtT8junGNw_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.16.22.png" alt="螢幕快照 2015-10-15 上午10.16.22.png"></p>
<p>接著打開 <a href="https://support.google.com/fusiontables/answer/2571232" target="_blank" rel="external">Google Fusion Table</a> 的頁面，看到下面這個畫面：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/vFIqF2IuSOuhKhR0mKUt_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.33.31.png" alt="螢幕快照 2015-10-15 上午10.33.31.png"></p>
<p>接著選擇「CREATE A FUSION TABLE」，會看到這樣的畫面：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/QrsLmP03QNamaW0qrqjT_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.37.48.png" alt="螢幕快照 2015-10-15 上午10.37.48.png"></p>
<p>現在試著把剛剛的 csv 直接餵給他，看看會發生什麼事
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/Wf4cjXTQTrCXlw0UDWMl_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.05.47.png" alt="螢幕快照 2015-10-15 上午10.05.47.png"></p>
<p>如果不意外，你應該會得到像這樣的亂碼資料 XDDDDD
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/AUqRTPyFQX29z5TdLGaM_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.06.19.png" alt="螢幕快照 2015-10-15 上午10.06.19.png"></p>
<p>不過沒關係，山不轉路轉，檔案格式當然也可以轉。只是需要多走幾步路。
這次我們將原始的 csv 資料先丟到 <a href="http://www.google.com/intl/zh-TW_tw/sheets/about/" target="_blank" rel="external">Google Sheet</a> 內，請他將我們的資料轉成正確的編碼。 在建立一個新的 Google Sheet 之後，我們選擇 File &gt; Import 將剛剛的 csv 檔案匯入：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/fNpq4j4rTEuynwQAcxOO_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.07.40.png" alt="螢幕快照 2015-10-15 上午10.07.40.png"></p>
<p>記得一樣要選擇 Comma，因為是透過逗點分隔的資料格式。
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/bbUWtz7RXqdpZsizK5Lw_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.08.07.png" alt="螢幕快照 2015-10-15 上午10.08.07.png"></p>
<p>然後就會得到正確編碼後的資料囉。<del>不過糖廍里一樣 GG...因為原始資料就 GG 了... orz</del>
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/wYMPpnlHTRmrgoywrKGc_%E6%9C%AA%E5%91%BD%E5%90%8D.png" alt="未命名.png"></p>
<p>ok, 到了這裡我們已經有一份正確的資料，這時再回到 Funsion Table，我們選擇 「Google Spreadsheets」，然後將剛剛建立的 Google Sheet 匯入進來:
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/QrsLmP03QNamaW0qrqjT_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.37.48.png" alt="螢幕快照 2015-10-15 上午10.37.48.png"></p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/66zfnteRQy6L50MJQUZ1_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.11.18.png" alt="螢幕快照 2015-10-15 上午10.11.18.png"></p>
<p>匯入成功後，Funsion Table 會出現這樣的畫面：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/pDQ7qI4WSDub29jPiglU_%E6%9C%AA%E5%91%BD%E5%90%8D.png" alt="未命名.png"></p>
<p>這個時候，因為我們要製作地圖，所以要告訴 Funsion Table 地點的欄位不是單純的字串，而是用來表示地理資訊的資料。點選 Edit &gt; Change columns：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/thibCn9zRMO435hQgjFd_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.11.57.png" alt="螢幕快照 2015-10-15 上午10.11.57.png"></p>
<p>然後將發生地點的 Type 改成 Location，然後點上面藍色的 Save 儲存。
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/TK4RPNQtQNiXcQBclDeu_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.12.09.png" alt="螢幕快照 2015-10-15 上午10.12.09.png"></p>
<p>資料都準備好了，然後我們建立地圖：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/csg65yBiQIyKcj1PAnNk_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.58.53.png" alt="螢幕快照 2015-10-15 上午10.58.53.png"></p>
<p>不意外的話你應該會看到這樣的畫面，是因為我們傳入的是地址的文字資訊， Google 需要將它轉為經緯度後才能對應到地圖上：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/JJNbZ5DRRmehqBdoDytm_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.13.03.png" alt="螢幕快照 2015-10-15 上午10.13.03.png"></p>
<p>然後等待一段時間後，Funsion Table 就會為我們產生地圖，像這樣：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/7cjQA7USzGy7nGrQRLDr_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8810.20.02.png" alt="螢幕快照 2015-10-15 上午10.20.02.png"></p>
<p>除了地點標示外，他也提供了熱圖 (Heat Map) 的呈現，試著拉拉旁邊的捲軸調整參數吧：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/304787/wMQb7zI8R72jFxu7a3g4_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-10-15%20%E4%B8%8A%E5%8D%8811.03.53.png" alt="螢幕快照 2015-10-15 上午11.03.53.png"></p>
<p>當然你也可以做好的地圖 share 出來，像這樣：</p>
<iframe width="800" height="400" scrolling="no" frameborder="no" src="https://www.google.com/fusiontables/embedviz?q=select+col3+from+1sAGtul5gWv1_yRpPTYI1ZvPaHQRPDod-B0MbOeS_&amp;viz=MAP&amp;h=false&amp;lat=25.05814459656792&amp;lng=121.63429174086912&amp;t=1&amp;z=12&amp;l=col3&amp;y=3&amp;tmplt=4&amp;hml=GEOCODABLE"></iframe>

<p>透過 Fusion Table 我們可以不用寫任何的程式碼就生成一份資訊地圖，很簡單吧 :)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用 Google Map 檢視台北市降雨淹水模擬圖]]></title>
      <url>http://kuro.tw/posts/2015/09/30/use-google-map-view-rainfall-simulation-of-flooding-in-taipei-city-map/</url>
      <content type="html"><![CDATA[<p>看到前兩天的新聞: <a href="https://tw.news.yahoo.com/%E6%9F%AF%E6%96%87%E5%93%B2%E6%83%B3%E5%85%AC%E9%96%8B%E6%98%93%E6%B7%B9%E6%B0%B4%E5%9C%B0%E5%8D%80-%E5%8C%97%E5%B8%82%E5%BA%9C%E5%B7%B2%E4%B8%8A%E7%B6%B2-115016390.html" title="柯文哲想公開易淹水地區 北市府已上網" target="_blank" rel="external">柯文哲想公開易淹水地區 北市府已上網</a>，又剛好有前輩寫了一篇 <a href="http://gis.rchss.sinica.edu.tw/qgis/?p=3221" title="利用QGIS檢視台北市降雨淹水模擬圖" target="_blank" rel="external">利用QGIS檢視台北市降雨淹水模擬圖</a>，<del>雖然身處房仲業，但身為有良心的開發者不能只想著房價</del>，心想應也可透過 Google Map 來呈現，於是試了一下，順便寫篇記錄。</p>
<p>首先從<a href="http://data.taipei/opendata/datalist/datasetMeta?oid=fa1e8012-ebb4-473b-888e-97f9a9ce365e" title="臺北市政府資料開放平台" target="_blank" rel="external">臺北市政府資料開放平台</a>將所需的資料一一下載下來，格式是 kmz (其實就是 zip 壓縮)。在解壓縮後可以得到 doc.kml 檔案。 接著，雖然 Google maps API 有提供 <a href="https://developers.google.com/maps/documentation/javascript/examples/layer-kml" title="Google maps API KML Layers" target="_blank" rel="external">KML Layers</a> 的圖層嵌套，但轉出來的 kml 檔似乎要稍作修改後才能透過 KML Layers 套用在 Google map 上，這裏我選擇另一種做法: 將 kml 轉為 geoJSON 後使用。</p>
<p>前面說到要將 kml 檔案轉為 geoJSON，那麼該如何轉換格式呢？
幸好 mapbox 提供了 <a href="https://github.com/mapbox/togeojson" target="_blank" rel="external">togeojson</a> 這套工具，透過它提供的 <code>toGeoJSON.kml(doc)</code> 就可以輕鬆地將它轉為 geoJSON 的格式了。</p>
<p>有關 GeoJSON 如何輸出至 Google Map 可以參考小弟之前的 post：<a href="http://kuro.tw/posts/2015/04/28/through-the-google-maps-api-geojson-data">透過 Google Maps API 處理 GeoJSON 資料</a>，這裏就不再贅述。</p>
<p>值得一提的是，透過 Google Maps Javascript API 輸出的 GeoJSON 預設的樣式都是黑色粗線，想要修改樣式的話可以透過 <code>setStyle</code> 來做處理，像這樣可以針對 name 是 0.3 的時候，我們輸出樣式為藍色的線，如果是 0.3~1.0 的話，則是輸出為綠色的線段，當然也可以針對填色與透明度等等做設定。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dataMap.setStyle(function(feature)&#123;</div><div class="line">  if( feature.getProperty(&apos;name&apos;) === &apos;0.3&apos;)&#123;</div><div class="line">    return &#123; fillOpacity: 0.35, fillColor: &apos;#0070FF&apos;, strokeWeight: 2, strokeColor: &apos;#0070FF&apos;, strokeOpacity: 1 &#125;;</div><div class="line">  &#125;</div><div class="line">  if( feature.getProperty(&apos;name&apos;) === &apos;0.3~1.0&apos;)&#123;</div><div class="line">    return &#123; fillOpacity: 0.35, fillColor: &apos;#54FF00&apos;, strokeWeight: 2, strokeColor: &apos;#54FF00&apos;, strokeOpacity: 1 &#125;;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>結果呈現像這樣：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/302535/lNUGoyd7RB2MOsx8i1cw_image.png" alt="image.png"></p>
<p>這裏也有 Online Demo: <a href="http://kurotanshi.github.io/TPEDisasterSummary/rain/rain_tp_map.html" target="_blank" rel="external">http://kurotanshi.github.io/TPEDisasterSummary/rain/rain_tp_map.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[筆記] JavaScript 變數宣告與作用域]]></title>
      <url>http://kuro.tw/posts/2015/07/08/note-javascript-variables-declared-with-the-scope-scope/</url>
      <content type="html"><![CDATA[<p>大家都知道，JavaScript 的變數有其作用域的範圍，若使用前未經 var 宣告，就會自動變成全域變數 (global variable)，而在其 code block 內宣告的變數也只有該 code block 內可以使用。</p>
<p>這次的問題，其實很久以前在 tonyQ 的聚會上就聽他說過了，<del>只是沒想到還真的會遇到 XDDDD</del></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(a);		<span class="comment">// 1</span></div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
<p>上面的 code 很簡單，就是宣告一個全域變數 a，然後值為 1 ，因為是全域變數，所以在之後的匿名函式內可以使用它。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">100</span>;</div><div class="line">  <span class="built_in">console</span>.log(a);		<span class="comment">// 100</span></div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
<p>這次，在匿名函式內，我們另外宣告了一個 a，值為 100，因為其作用域的關係，所以 console 的結果會是 100。</p>
<p>接著，問題來了，如果我們在 <code>var a = 100;</code> 之前去取值，會發生什麼事呢？
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(a);    <span class="comment">//  ?</span></div><div class="line">  <span class="keyword">var</span> a = <span class="number">100</span>;</div><div class="line">  <span class="built_in">console</span>.log(a);    <span class="comment">// 100</span></div><div class="line">&#125;)();</div></pre></td></tr></table></figure></p>
<p>答案是，第一次的 console.log(a) 會印出 <strong>undefined</strong>，而第二次會出現 100。</p>
<p>因為在匿名函數獨立的 scope 內，不管 var 是放在最前面，或是最後一行，他的變數實體在該 code block 一開始就是新的了，也就是說，剛剛的 code 其實等同下面這段：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> a;</div><div class="line">  <span class="built_in">console</span>.log(a);    <span class="comment">// undefined</span></div><div class="line">  a = <span class="number">100</span>;</div><div class="line">  <span class="built_in">console</span>.log(a);    <span class="comment">// 100</span></div><div class="line">&#125;)();</div></pre></td></tr></table></figure></p>
<p>所以第一次會印出 undefined 。</p>
<p>要怎麼排除這樣的問題呢，很簡單，要嘛一開始就不要取相同名稱，要嘛就透過參數的方式代入原本的變數，像這樣：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">_a</span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(_a);    <span class="comment">// 1</span></div><div class="line">  <span class="keyword">var</span> a = <span class="number">100</span>;</div><div class="line">  <span class="built_in">console</span>.log(a);    <span class="comment">// 100</span></div><div class="line">&#125;)(a);</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Taipei D3.js Meetup 小聚分享心得]]></title>
      <url>http://kuro.tw/posts/2015/06/18/taipei-d3js-meetup-gathering-to-share-experiences/</url>
      <content type="html"><![CDATA[<p>這次我在 <a href="http://www.meetup.com/Taipei-D3-js-Meetup/" title="Taipei D3.js Meetup" target="_blank" rel="external">Taipei D3.js Meetup</a> (現在似乎改叫 Visual Thursday) 分享的 Talk 是有關於地理視覺化的簡介，雖然題目聽起來很學術，但其實內容是我這陣子對於 Web GIS 以及地圖視覺化的一些摸索心得分享。</p>
<p>感謝台灣微軟提供場地 XD</p>
<p>下面是我的投影片</p>
<iframe src="https://www.slideshare.net/slideshow/embed_code/key/mhzctMFXFoHMJn" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="margin-bottom:1em;"></iframe>


<p>這次幾個 Demo 的原始碼都放在 Github 上： <a href="https://github.com/kurotanshi/VisualThursday_demo" target="_blank" rel="external">https://github.com/kurotanshi/VisualThursday_demo</a>
有興趣的朋友可以自行下載研究。</p>
<p>想看 Online Demo 的也可以直接到這： <a href="http://kurotanshi.github.io/VisualThursday_demo/" target="_blank" rel="external">http://kurotanshi.github.io/VisualThursday_demo/</a></p>
<p>雖然都是以 Google Map 為範例，但是大部份的圖資系統如 leaflet.js / MapBox 等都是通用的，尤其是 <a href="http://turfjs.org/" title="http://turfjs.org/" target="_blank" rel="external">Turf.js</a> 這個地理資訊分析的工具，十分強大，可以直接針對 geojson 做運算，也可以透過 node 在後端執行運算。至今我還在摸索它的功能，也許未來更加熟練後可以再來分享給大家。</p>
<p>謝謝所有在端午連假前仍願意來參與活動的朋友，大家端午節快樂 :)</p>
<p>最後，我們還有很多專案想實現，歡迎有志之士加入！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[JS] [Note] TWD97 標轉換爲 經緯度 ]]></title>
      <url>http://kuro.tw/posts/2015/06/11/js-note-twd97-convert-to-longitude-and-latitude/</url>
      <content type="html"><![CDATA[<p>因為從臺北市政府資料開放平台 API 拿到的資料是 TWD97 座標格式，所以我們必須要將它轉成經緯度後才能套用至 Google Map 使用。網路上查了很多資料，最後找到最親民的是米蟲大的 PHP 版本，於是就改成寫我最熟悉的 JS。</p>
<p>reference:
<a href="http://blog.xuite.net/vexed/tech/53749528-TWD97+%E5%BA%A7%E6%A8%99%E8%BD%89%E7%B6%93%E7%B7%AF%E5%BA%A6" target="_blank" rel="external">Vexed&#39;s Blog - TWD97 座標轉經緯度</a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">twd97_to_latlng</span>(<span class="params">$x, $y</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> pow = <span class="built_in">Math</span>.pow, M_PI = <span class="built_in">Math</span>.PI;</div><div class="line">  <span class="keyword">var</span> sin = <span class="built_in">Math</span>.sin, cos = <span class="built_in">Math</span>.cos, tan = <span class="built_in">Math</span>.tan;</div><div class="line">  <span class="keyword">var</span> $a = <span class="number">6378137.0</span>, $b = <span class="number">6356752.314245</span>;</div><div class="line">  <span class="keyword">var</span> $lng0 = <span class="number">121</span> * M_PI / <span class="number">180</span>, $k0 = <span class="number">0.9999</span>, $dx = <span class="number">250000</span>, $dy = <span class="number">0</span>;</div><div class="line">  <span class="keyword">var</span> $e = pow((<span class="number">1</span> - pow($b, <span class="number">2</span>) / pow($a, <span class="number">2</span>)), <span class="number">0.5</span>);</div><div class="line"></div><div class="line">  $x -= $dx;</div><div class="line">  $y -= $dy;</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $M = $y / $k0;</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $mu = $M / ($a * (<span class="number">1.0</span> - pow($e, <span class="number">2</span>) / <span class="number">4.0</span> - <span class="number">3</span> * pow($e, <span class="number">4</span>) / <span class="number">64.0</span> - <span class="number">5</span> * pow($e, <span class="number">6</span>) / <span class="number">256.0</span>));</div><div class="line">  <span class="keyword">var</span> $e1 = (<span class="number">1.0</span> - pow((<span class="number">1.0</span> - pow($e, <span class="number">2</span>)), <span class="number">0.5</span>)) / (<span class="number">1.0</span> + pow((<span class="number">1.0</span> - pow($e, <span class="number">2</span>)), <span class="number">0.5</span>));</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $J1 = (<span class="number">3</span> * $e1 / <span class="number">2</span> - <span class="number">27</span> * pow($e1, <span class="number">3</span>) / <span class="number">32.0</span>);</div><div class="line">  <span class="keyword">var</span> $J2 = (<span class="number">21</span> * pow($e1, <span class="number">2</span>) / <span class="number">16</span> - <span class="number">55</span> * pow($e1, <span class="number">4</span>) / <span class="number">32.0</span>);</div><div class="line">  <span class="keyword">var</span> $J3 = (<span class="number">151</span> * pow($e1, <span class="number">3</span>) / <span class="number">96.0</span>);</div><div class="line">  <span class="keyword">var</span> $J4 = (<span class="number">1097</span> * pow($e1, <span class="number">4</span>) / <span class="number">512.0</span>);</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $fp = $mu + $J1 * sin(<span class="number">2</span> * $mu) + $J2 * sin(<span class="number">4</span> * $mu) + $J3 * sin(<span class="number">6</span> * $mu) + $J4 * sin(<span class="number">8</span> * $mu);</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $e2 = pow(($e * $a / $b), <span class="number">2</span>);</div><div class="line">  <span class="keyword">var</span> $C1 = pow($e2 * cos($fp), <span class="number">2</span>);</div><div class="line">  <span class="keyword">var</span> $T1 = pow(tan($fp), <span class="number">2</span>);</div><div class="line">  <span class="keyword">var</span> $R1 = $a * (<span class="number">1</span> - pow($e, <span class="number">2</span>)) / pow((<span class="number">1</span> - pow($e, <span class="number">2</span>) * pow(sin($fp), <span class="number">2</span>)), (<span class="number">3.0</span> / <span class="number">2.0</span>));</div><div class="line">  <span class="keyword">var</span> $N1 = $a / pow((<span class="number">1</span> - pow($e, <span class="number">2</span>) * pow(sin($fp), <span class="number">2</span>)), <span class="number">0.5</span>);</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $D = $x / ($N1 * $k0);</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $Q1 = $N1 * tan($fp) / $R1;</div><div class="line">  <span class="keyword">var</span> $Q2 = (pow($D, <span class="number">2</span>) / <span class="number">2.0</span>);</div><div class="line">  <span class="keyword">var</span> $Q3 = (<span class="number">5</span> + <span class="number">3</span> * $T1 + <span class="number">10</span> * $C1 - <span class="number">4</span> * pow($C1, <span class="number">2</span>) - <span class="number">9</span> * $e2) * pow($D, <span class="number">4</span>) / <span class="number">24.0</span>;</div><div class="line">  <span class="keyword">var</span> $Q4 = (<span class="number">61</span> + <span class="number">90</span> * $T1 + <span class="number">298</span> * $C1 + <span class="number">45</span> * pow($T1, <span class="number">2</span>) - <span class="number">3</span> * pow($C1, <span class="number">2</span>) - <span class="number">252</span> * $e2) * pow($D, <span class="number">6</span>) / <span class="number">720.0</span>;</div><div class="line">  <span class="keyword">var</span> $lat = $fp - $Q1 * ($Q2 - $Q3 + $Q4);</div><div class="line"></div><div class="line">  <span class="keyword">var</span> $Q5 = $D;</div><div class="line">  <span class="keyword">var</span> $Q6 = (<span class="number">1</span> + <span class="number">2</span> * $T1 + $C1) * pow($D, <span class="number">3</span>) / <span class="number">6</span>;</div><div class="line">  <span class="keyword">var</span> $Q7 = (<span class="number">5</span> - <span class="number">2</span> * $C1 + <span class="number">28</span> * $T1 - <span class="number">3</span> * pow($C1, <span class="number">2</span>) + <span class="number">8</span> * $e2 + <span class="number">24</span> * pow($T1, <span class="number">2</span>)) * pow($D, <span class="number">5</span>) / <span class="number">120.0</span>;</div><div class="line">  <span class="keyword">var</span> $lng = $lng0 + ($Q5 - $Q6 + $Q7) / cos($fp);</div><div class="line"></div><div class="line">  $lat = ($lat * <span class="number">180</span>) / M_PI;</div><div class="line">  $lng = ($lng * <span class="number">180</span>) / M_PI;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    lat: $lat,</div><div class="line">    lng: $lng</div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在 Google Map 加入 D3 圖像 - 2]]></title>
      <url>http://kuro.tw/posts/2015/05/20/added-to-the-google-map-images-d3-2/</url>
      <content type="html"><![CDATA[<p><a href="http://kuro.tw/posts/2015/05/20/join-the-d3-in-google-map-image" title="在 Google Map 加入 D3 圖像 ">上一篇</a>提到了如何在 Google Map 裡面加入 D3 的圖像，這次我們實際將資料套進去吧。</p>
<p>資料來源是上篇提到的<a href="http://data.taipei/opendata/datalist/datasetMeta?oid=1d71c478-205f-42c5-8386-35f86d74fdd1" target="_blank" rel="external">臺北捷運各站進出量統計</a>的統計資料，因為台北市政府開放平台並沒有提供 CORS (跨來源資源共享)的服務，沒關係，我們直接將資料下載存成 json 檔案即可。 (範例為 2015/4 進出站人數)</p>
<p>按照慣例，先看結果 - Demo: <a href="http://jsbin.com/wexiva/3/" target="_blank" rel="external">http://jsbin.com/wexiva/3/</a>
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/276658/4DhTbWRwSvujvsxZC2Z5_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-05-20%20%E4%B8%8B%E5%8D%8811.54.46.png" alt="螢幕快照 2015-05-20 下午11.54.46.png"></p>
<p>藍色的是進站人數，橘色的是出站人數。可以看出各站在 4/1 的進出站人數相當平均。</p>
<p>因為這次抓取的資料比較多，所以程式也稍微複雜一點，不過沒關係，概念還是很簡單的。
不囉唆直接看 code.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> map;</div><div class="line"><span class="keyword">var</span> overlay = <span class="keyword">new</span> google.maps.OverlayView();</div><div class="line"><span class="keyword">var</span> sta_in = [], sta_out = [], mrtData;</div><div class="line"></div><div class="line"><span class="comment">// 讀取資料, sta_in = 2015 年四月進站人數, sta_out = 2015 年四月出站人數.</span></div><div class="line"><span class="comment">// 資料來源: http://data.taipei/opendata/datalist/datasetMeta?oid=1d71c478-205f-42c5-8386-35f86d74fdd1</span></div><div class="line">d3.csv(<span class="string">"https://dl.dropboxusercontent.com/u/12537630/mrt.csv"</span>,</div><div class="line"><span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">  mrtData = data;</div><div class="line"></div><div class="line">  <span class="comment">// 進站</span></div><div class="line">  d3.json(<span class="string">"https://dl.dropboxusercontent.com/u/12537630/mrt-in-april.json"</span>,</div><div class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">error, json</span>) </span>&#123;</div><div class="line">    sta_in = json.result.results;</div><div class="line">    <span class="keyword">if</span>( sta_in.length &gt; <span class="number">0</span> &amp;&amp; sta_out.length &gt; <span class="number">0</span> ) &#123; drawMap(); &#125;</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  <span class="comment">// 出站</span></div><div class="line">  d3.json(<span class="string">"https://dl.dropboxusercontent.com/u/12537630/mrt-out-april.json"</span>,</div><div class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">error, json</span>) </span>&#123;</div><div class="line">    sta_out = json.result.results;</div><div class="line">    <span class="keyword">if</span>( sta_in.length &gt; <span class="number">0</span> &amp;&amp; sta_out.length &gt; <span class="number">0</span> ) &#123; drawMap(); &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawMap</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 設定圓餅圖長寬, 半徑</span></div><div class="line">    <span class="keyword">var</span> width = <span class="number">35</span>, height = <span class="number">40</span>, radius = <span class="built_in">Math</span>.min(width, height) / <span class="number">2</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 透過 d3.scale.category10() 生成顏色</span></div><div class="line">    <span class="keyword">var</span> color = d3.scale.category10();</div><div class="line"></div><div class="line">truetrue<span class="comment">// d3.layout.pie()</span></div><div class="line">truetrue<span class="keyword">var</span> pie = d3.layout.pie();</div><div class="line"></div><div class="line">    <span class="comment">// 設定圓餅內外層半徑, 這裏內層設 0.</span></div><div class="line">    <span class="keyword">var</span> arc = d3.svg.arc()</div><div class="line">        .innerRadius(<span class="number">0</span>)</div><div class="line">        .outerRadius(radius);</div><div class="line"></div><div class="line">    overlay.onAdd = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> layer = d3.select(<span class="keyword">this</span>.getPanes().overlayLayer).append(<span class="string">"div"</span>)</div><div class="line">            .attr(<span class="string">"class"</span>, <span class="string">"stations"</span>);</div><div class="line"></div><div class="line">        overlay.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> projection = <span class="keyword">this</span>.getProjection(),</div><div class="line">                padding = <span class="number">16</span>;</div><div class="line"></div><div class="line">            <span class="comment">// 針對每一筆捷運站增加 marker</span></div><div class="line">            <span class="keyword">var</span> marker = layer.selectAll(<span class="string">"svg"</span>)</div><div class="line">                .data(d3.entries(mrtData))</div><div class="line">                .each(transform)</div><div class="line">                .enter().append(<span class="string">"svg"</span>)</div><div class="line">                .each(transform)</div><div class="line">                .attr(&#123;</div><div class="line">                    <span class="string">'class'</span>: <span class="string">"marker"</span>,</div><div class="line">                    <span class="string">"width"</span>: width,</div><div class="line">                    <span class="string">"height"</span>: height,</div><div class="line">                    <span class="string">"transform"</span>: <span class="string">"translate("</span> + width / <span class="number">2</span> + <span class="string">","</span> + height / <span class="number">2</span> + <span class="string">")"</span>,</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">            <span class="comment">// 將取得的進出站資料透過 .data( pie([ 進站人數, 出站人數 ]) ) 指定到圓餅圖中。</span></div><div class="line">            <span class="comment">// sta_in[0] 代表 4/1 進站人數, sta_out[0] 代表 4/1 出站人數.</span></div><div class="line">            <span class="keyword">var</span> g = marker.selectAll(<span class="string">"g"</span>)</div><div class="line">                .data(<span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>) </span>&#123;</div><div class="line">                    <span class="keyword">return</span> pie([<span class="built_in">parseInt</span>(sta_in[<span class="number">0</span>][d.value.name].replace(<span class="string">','</span>, <span class="string">''</span>), <span class="number">10</span>), <span class="built_in">parseInt</span>(sta_out[<span class="number">0</span>][d.value.name].replace(<span class="string">','</span>, <span class="string">''</span>), <span class="number">10</span>)]);</div><div class="line">                &#125;)</div><div class="line">                .enter()</div><div class="line">                .append(<span class="string">"g"</span>);</div><div class="line"></div><div class="line">            <span class="comment">// 著色</span></div><div class="line">            g.append(<span class="string">"path"</span>)</div><div class="line">                .attr(&#123;</div><div class="line">                  <span class="string">"fill"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>) </span>&#123; <span class="keyword">return</span> color(i); &#125;,</div><div class="line">                  <span class="string">"d"</span>, arc,</div><div class="line">                  <span class="string">"transform"</span>: <span class="string">"translate("</span> + width / <span class="number">2</span> + <span class="string">","</span> + height / <span class="number">2</span> + <span class="string">")"</span></div><div class="line">                &#125;);</div><div class="line"></div><div class="line">            <span class="comment">// 加入標籤</span></div><div class="line">            marker.append(<span class="string">"text"</span>)</div><div class="line">                .attr(<span class="string">"x"</span>, padding + <span class="number">7</span>)</div><div class="line">                .attr(<span class="string">"y"</span>, padding)</div><div class="line">                .attr(<span class="string">"dy"</span>, <span class="string">".31em"</span>)</div><div class="line">                .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                    <span class="keyword">return</span> d.value.name;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">            <span class="function"><span class="keyword">function</span> <span class="title">transform</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">                d = <span class="keyword">new</span> google.maps.LatLng(d.value.lat, d.value.lng);</div><div class="line">                d = projection.fromLatLngToDivPixel(d);</div><div class="line">                <span class="keyword">return</span> d3.select(<span class="keyword">this</span>)</div><div class="line">                    .style(<span class="string">"left"</span>, (d.x - padding) + <span class="string">"px"</span>)</div><div class="line">                    .style(<span class="string">"top"</span>, (d.y - padding) + <span class="string">"px"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line"></div><div class="line">    &#125;;</div><div class="line">    overlay.setMap(map);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="本系列文章列表"><a href="#本系列文章列表" class="headerlink" title="本系列文章列表:"></a>本系列文章列表:</h4><ul>
<li><a href="http://kuro.tw/posts/2015/05/20/join-the-d3-in-google-map-image">在 Google Map 加入 D3 圖像 (1)</a></li>
<li><a href="http://kuro.tw/posts/2015/05/20/added-to-the-google-map-images-d3-2">在 Google Map 加入 D3 圖像 (2)</a></li>
</ul>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在 Google Map 加入 D3 圖像]]></title>
      <url>http://kuro.tw/posts/2015/05/19/join-the-d3-in-google-map-image/</url>
      <content type="html"><![CDATA[<p>因為昨天 <a href="http://data.taipei/" target="_blank" rel="external">台北市政府開放平台</a> 開始提供 <a href="http://data.taipei/opendata/datalist/datasetMeta?oid=1d71c478-205f-42c5-8386-35f86d74fdd1" target="_blank" rel="external">臺北捷運各站進出量統計</a> 的統計資料，所以就在思考可以利用這份資料做什麼應用，第一個想到的就是能否透過 D3 與地圖的共同呈現，當然就從我最熟悉的 Google Map 開始。</p>
<p>不過這篇文章只會介紹到如何在 Google Map 加入 D3 (SVG) 圖像。
等我將捷運各站資訊加入後也許會還有下回，哈哈哈。</p>
<p>先看結果 - Demo: <a href="http://output.jsbin.com/wexiva/1/" target="_blank" rel="external">http://output.jsbin.com/wexiva/1/</a>
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/276547/NyZaTlSTDuH8v6DRzWAY_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-05-19%20%E4%B8%8B%E5%8D%8811.34.22.png" alt="螢幕快照 2015-05-19 下午11.34.22.png"></p>
<p>整個程式非常簡單，首先在 Google map 加入一個 <code>google.maps.OverlayView()</code>，然後透過 <code>d3.csv</code> 載入資料。在繪製 marker (圓點) 的時候，透過自訂的 <code>transform function</code> 去指定它的座標就完成了。</p>
<p>相關程式如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// 捷運各站經緯度資訊: https://dl.dropboxusercontent.com/u/12537630/mrt.csv</span></div><div class="line"><span class="comment">// 資料來源: https://github.com/repeat/taipei-metro-stations</span></div><div class="line"></div><div class="line">d3.csv(<span class="string">"https://dl.dropboxusercontent.com/u/12537630/mrt.csv"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> overlay = <span class="keyword">new</span> google.maps.OverlayView();</div><div class="line"></div><div class="line">  <span class="comment">// 新增 OverlayView 到 google map</span></div><div class="line">  overlay.onAdd = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> layer = d3.select(<span class="keyword">this</span>.getPanes().overlayLayer).append(<span class="string">"div"</span>)</div><div class="line">        .attr(<span class="string">"class"</span>, <span class="string">"stations"</span>);</div><div class="line"></div><div class="line">    overlay.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="keyword">var</span> projection = <span class="keyword">this</span>.getProjection(), padding = <span class="number">16</span>;</div><div class="line"></div><div class="line">      <span class="keyword">var</span> marker = layer.selectAll(<span class="string">"svg"</span>)</div><div class="line">          .data(d3.entries(data))</div><div class="line">          .each(transform)</div><div class="line">          .enter().append(<span class="string">"svg:svg"</span>)</div><div class="line">            .each(transform)</div><div class="line">            .attr(<span class="string">"class"</span>, <span class="string">"marker"</span>);</div><div class="line"></div><div class="line">      <span class="comment">// 加入圓點</span></div><div class="line">      marker.append(<span class="string">"svg:circle"</span>)</div><div class="line">          .attr(<span class="string">"r"</span>, <span class="number">6</span>)</div><div class="line">          .attr(<span class="string">"cx"</span>, padding)</div><div class="line">          .attr(<span class="string">"cy"</span>, padding);</div><div class="line"></div><div class="line">      <span class="comment">// 加入標籤</span></div><div class="line">      marker.append(<span class="string">"svg:text"</span>)</div><div class="line">          .attr(<span class="string">"x"</span>, padding + <span class="number">7</span>)</div><div class="line">          .attr(<span class="string">"y"</span>, padding)</div><div class="line">          .attr(<span class="string">"dy"</span>, <span class="string">".31em"</span>)</div><div class="line">          .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.value.name; &#125;);</div><div class="line"></div><div class="line">      <span class="comment">// transform function. 指定每個點的座標.</span></div><div class="line">      <span class="function"><span class="keyword">function</span> <span class="title">transform</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">        d = <span class="keyword">new</span> google.maps.LatLng(d.value.lat, d.value.lng);</div><div class="line">        d = projection.fromLatLngToDivPixel(d);</div><div class="line">        <span class="keyword">return</span> d3.select(<span class="keyword">this</span>)</div><div class="line">            .style(<span class="string">"left"</span>, (d.x - padding) + <span class="string">"px"</span>)</div><div class="line">            .style(<span class="string">"top"</span>, (d.y - padding) + <span class="string">"px"</span>);</div><div class="line">      &#125;</div><div class="line">    &#125;;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  <span class="comment">// 將 overlay 加入到 google 地圖</span></div><div class="line">  overlay.setMap(map);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="參考"><a href="#參考" class="headerlink" title="參考:"></a>參考:</h4><ul>
<li><a href="http://bl.ocks.org/mbostock/899711" target="_blank" rel="external">http://bl.ocks.org/mbostock/899711</a></li>
<li><a href="https://developers.google.com/maps/documentation/javascript/customoverlays?hl=zh-tw" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/customoverlays?hl=zh-tw</a></li>
</ul>
<hr>
<h4 id="本系列文章列表"><a href="#本系列文章列表" class="headerlink" title="本系列文章列表:"></a>本系列文章列表:</h4><ul>
<li><a href="http://kuro.tw/posts/2015/05/20/join-the-d3-in-google-map-image">在 Google Map 加入 D3 圖像 (1)</a></li>
<li><a href="http://kuro.tw/posts/2015/05/20/added-to-the-google-map-images-d3-2">在 Google Map 加入 D3 圖像 (2)</a></li>
</ul>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Modern WebConf 2015 與我的講題：D3 圖表優化二三事]]></title>
      <url>http://kuro.tw/posts/2015/05/17/modern-webconf-2015-with-my-theme-d3-optimizing-two-or-three-things/</url>
      <content type="html"><![CDATA[<p>下面投影片是這次小弟在 Modern WebConf 2015 分享的主題，內容是有關 D3 開發的一些心得。</p>
<p>其實早先在準備的時候有些忐忑，像這種大拜拜的演講場合，很難預想聽眾的程度，講題太深擔心會眾無法吸收，太淺又怕對不起會眾的期待。 所以這次的內容安排了三分之一是從最基礎的 D3 data-driven 講起，再來才是開發心得與特性的介紹，期望不管是剛入門的朋友或是已經投入開發的老手都能從中獲得些什麼。因為我認為 Data-Driven 是 D3.js 的核心觀念之一，在瞭解如何將資料轉為 DOM / SVG 元件以後，剩下再去讀 D3 的 API 相信也能輕易上手。</p>
<p><a href="http://audrey.nu/-/2015/05/16/open-source-enlightenment-2015" title="開源之道 2015 " target="_blank" rel="external">「萬事萬物都有缺口，缺口就是光的入口」</a>，如果有什麼是我講的不對的地方，也歡迎 <del>用力打臉</del> 糾正，畢竟我都這麼厚臉皮出來分享了，讓小弟我有機會獲得正確答案應該不過分，哈哈哈。</p>
<p>最後，在這裡預告一下，感謝 <a href="http://www.meetup.com/Taipei-D3-js-Meetup/" title="Taipei D3.js Meetup" target="_blank" rel="external">Taipei D3.js Meetup</a> 的邀約，預計在六月份會有一場小聚的分享，題目還在構思當中。 如果你對 D3 相關議題也有興趣，歡迎與我交流。 :)</p>
<p>無論如何，還是感謝每一位參與 Modern WebConf 的會眾、講師以及工作人員。辛苦了。</p>
<p><iframe src="//www.slideshare.net/slideshow/embed_code/key/NdKfJWerFlauo9" width="510" height="420" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/kurotanshi/d3-48180820" title="[Modern WebConf 2015] D3 圖表優化二三事" target="_blank">[Modern WebConf 2015] D3 圖表優化二三事</a> </strong> from <strong><a href="//www.slideshare.net/kurotanshi" target="_blank">Kuro Hsu</a></strong> </div></p>
<p><div style="margin-top:2em;">偷偷在底下擺張 JavaScript 之父 Brendan Eich，與小弟 <del>(自稱 JS 之子)</del> 的合照炫耀一下 XD</div>
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/276313/SIxIklSuRka61onbK0IK_IMG_8751.jpg" alt="IMG_8751.jpg"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[筆記] 阻擋 android chrome 網頁下拉自動重整頁面]]></title>
      <url>http://kuro.tw/posts/2015/05/11/note-blocking-android-chrome-page-drop-down-automatically-restructure-page/</url>
      <content type="html"><![CDATA[<p>早上開會時，同事提到了 Android 升級後，Chrome for Android 會出現網頁畫面在瀏覽器頂端時，往下拉會重整頁面的問題(<del>其實應該說是 Feature XD</del>)，因為這個新功能會造成網頁使用上的一些困擾，於是試了幾種方式，發現可以阻擋網頁重整的動作，趁還有印象就把它記錄下來。</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/275711/HX5wrVYQ8WW8gkKhK8rQ_2015-05-11%2015.12.02.jpg" alt="2015-05-11 15.12.02.jpg">
(就是這個小圈圈，看到它就代表網頁要重整了)</p>
<p>原理其實很簡單，就是在當 chrome 已經到達網頁頂端時，而且判斷 touchmove 是往下拉時，把事件阻擋掉，就可以了。</p>
<p>可以用 Android 試試看。
Demo: <a href="http://jsbin.com/conuga/1/" target="_blank" rel="external">http://jsbin.com/conuga/1/</a></p>
<p>聽說 iOS 也有類似問題，不過我手邊沒有 iPhone，所以無法測試。 orz</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> isWindowTop = <span class="literal">false</span>;</div><div class="line">    <span class="keyword">var</span> lastTouchY = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> touchStartHandler = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (e.touches.length !== <span class="number">1</span>) <span class="keyword">return</span>;</div><div class="line">        lastTouchY = e.touches[<span class="number">0</span>].clientY;</div><div class="line">        isWindowTop = (<span class="built_in">window</span>.pageYOffset === <span class="number">0</span>);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> touchMoveHandler = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> touchY = e.touches[<span class="number">0</span>].clientY;</div><div class="line">        <span class="keyword">var</span> touchYmove = touchY - lastTouchY;</div><div class="line">        lastTouchY = touchY;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (isWindowTop) &#123;</div><div class="line">            isWindowTop = <span class="literal">false</span>;</div><div class="line">            <span class="comment">// 阻擋移動事件</span></div><div class="line">            <span class="keyword">if</span> (touchYmove &gt; <span class="number">0</span>) &#123;</div><div class="line">                e.preventDefault();</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, touchStartHandler, <span class="literal">false</span>);</div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'touchmove'</span>, touchMoveHandler, <span class="literal">false</span>);</div><div class="line"></div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[筆記] Shapefile to GeoJSON]]></title>
      <url>http://kuro.tw/posts/2015/05/05/note-shapefile-to-geojson/</url>
      <content type="html"><![CDATA[<p>因為每次轉檔都要查，索性把步驟記錄下來。</p>
<p>首先要安裝 GDAL (Geospatial Data Abstraction Library) 這個程式，
因為我是用 Mac ，所以在 terminal 輸入 <code>brew install gdal</code> 就可以了。</p>
<p>其他作業系統的安裝方式可詳閱 <a href="http://www.gdal.org/" target="_blank" rel="external">http://www.gdal.org/</a> 。</p>
<p>安裝好 gdal 之後，就可以透過 ogr2ogr 來執行轉檔，一樣在 terminal 輸入：</p>
<p><code>ogr2ogr -f &quot;GeoJSON&quot; output.json source.shp</code></p>
<p>以臺北市政府開放資料的<strong>臺北市區界圖</strong> ( <a href="http://data.taipei/opendata/datalist/datasetMeta?oid=1601ef3a-c253-4988-b047-943d9e786143" target="_blank" rel="external">http://data.taipei/opendata/datalist/datasetMeta?oid=1601ef3a-c253-4988-b047-943d9e786143</a> ) 提供的 Shapefile 來說，因為它的坐標系統是 EPSG:3826(TWD97/121分帶)，我們需要把它轉換成 WGS84經緯度(EPSG:4326)，所以透過 <code>-s_srs</code> 與 <code>-t_srs</code> 來分別指定轉換前與轉換後的座標系統：</p>
<p><code>ogr2ogr -f &quot;GeoJSON&quot; -s_srs EPSG:3826 -t_srs EPSG:4326  output.json source.shp</code></p>
<p>轉換後的 geojson 直接輸出到 google map 上：
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/263637/UrqBEFSmTuazvdty255S_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-05-05%20%E4%B8%8B%E5%8D%883.47.07.png" alt="螢幕快照 2015-05-05 下午3.47.07.png"></p>
<p>就這樣。</p>
<p>[補充]
關於 GeoJson 送到 Google Map 的部分可以參考我的其他文章：
<a href="http://kuro.tw/posts/2015/04/28/through-the-google-maps-api-geojson-data" title="透過 Google Maps API 處理 GeoJSON 資料">透過 Google Maps API 處理 GeoJSON 資料</a>
<a href="http://kuro.tw/posts/2015/09/30/use-google-map-view-rainfall-simulation-of-flooding-in-taipei-city-map" title="利用 Google Map 檢視台北市降雨淹水模擬圖">利用 Google Map 檢視台北市降雨淹水模擬圖</a></p>
<p>又，如果需要轉換成 TopoJSON 的話，也可以參考這篇： <a href="http://blog.infographics.tw/2015/04/visualize-geographics-with-d3js/" title="視覺化實戰 － D3.js 地理區塊視覺化" target="_blank" rel="external">視覺化實戰 － D3.js 地理區塊視覺化</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[snippet] D3.js 甜甜圈圖 (donut chart) 的放大漸變效果]]></title>
      <url>http://kuro.tw/posts/2015/05/04/snippet-d3js-donuts-chart-the-transition-effect/</url>
      <content type="html"><![CDATA[<p>做法很簡單，就是做兩個 <code>d3.svg.arc()</code> 然後在 <code>mouseover</code> &amp; <code>mouseout</code> 的時候改變 <code>d</code> 屬性即可。</p>
<p>這裏就拿 <a href="http://bl.ocks.org/mbostock/3887193" target="_blank" rel="external">http://bl.ocks.org/mbostock/3887193</a> 作為範例。</p>
<p>DEMO: (original charts)
<a href="http://output.jsbin.com/darexo/1/" target="_blank" rel="external">http://output.jsbin.com/darexo/1/</a></p>
<p>DEMO2: (add hover effect)
<a href="http://output.jsbin.com/darexo/3/" target="_blank" rel="external">http://output.jsbin.com/darexo/3/</a></p>
<iframe class="jsbin-embed" src="http://jsbin.com/darexo/3/embed?output" frameborder="0" height="400"></iframe>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// original</span></div><div class="line"><span class="keyword">var</span> arc = d3.svg.arc()</div><div class="line">    .outerRadius(radius - <span class="number">10</span>)</div><div class="line">    .innerRadius(radius - <span class="number">70</span>);</div><div class="line"></div><div class="line"><span class="comment">// arc with scaling</span></div><div class="line"><span class="keyword">var</span> arcOver = d3.svg.arc()</div><div class="line">    .outerRadius(radius)</div><div class="line">    .innerRadius(radius - <span class="number">70</span>);</div></pre></td></tr></table></figure>
<p>中間略</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// adding mouse events with transition</span></div><div class="line">g.selectAll(<span class="string">".arc &gt; path"</span>)</div><div class="line">true.on(&#123;</div><div class="line">truetrue<span class="string">"mouseover"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</div><div class="line">truetruetrued3.select(<span class="keyword">this</span>).transition().duration(<span class="number">250</span>).attr(<span class="string">'d'</span>, arcOver);</div><div class="line">truetrue&#125;,</div><div class="line">truetrue<span class="string">"mouseout"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</div><div class="line">truetruetrued3.select(<span class="keyword">this</span>).transition().duration(<span class="number">250</span>).attr(<span class="string">'d'</span>, arc);</div><div class="line">truetrue&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>補充：感謝小馬提出 hover 在 text 上會無法執行動畫的問題。
只要把 mouse event 改綁在上一層的 <code>&lt;g&gt;</code> 上面，或是在 text 的 CSS 下 <code>pointer-events: none;</code> 取消它的 pointer 事件即可。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">g.on(&#123;</div><div class="line">  <span class="string">"mouseover"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</div><div class="line">    d3.select(<span class="keyword">this</span>.childNodes[<span class="number">0</span>]).transition().duration(<span class="number">250</span>).attr(<span class="string">'d'</span>, arcOver);</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"mouseout"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</div><div class="line">    d3.select(<span class="keyword">this</span>.childNodes[<span class="number">0</span>]).transition().duration(<span class="number">250</span>).attr(<span class="string">'d'</span>, arc);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[淺談 Google map Heat map API ]]></title>
      <url>http://kuro.tw/posts/2015/04/29/a-brief-talk-on-google-map-heat-map-api/</url>
      <content type="html"><![CDATA[<p>前陣子因為工作的需要，稍微研究了一下 Google Map 提供的 HeatMap (熱點圖/熱圖) API，實作方面也滿容易的，在這裡就簡單做個紀錄。</p>
<p><strong>HeatMap</strong> (以下稱熱圖) 是用來表示<strong>資料數值強度與位置的可視化</strong>，Google 熱圖 API 在預設情況下，高強度的數值會以紅色表示，低強度的數值則是以綠色來表示。</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/262458/gg6DtVUASmSRqxaw8gpk_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-29%20%E4%B8%8B%E5%8D%883.37.46.png" alt="螢幕快照 2015-04-29 下午3.37.46.png">
圖片來源: <a href="https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap</a></p>
<p>有了簡單的認知後，那麼就來說明如何透過 Google Map API 在 Google Map 載入熱圖。</p>
<p>首先是在載入 Google Maps API 時，必須加入 <strong>visualization</strong> 這個 library。在後面加入 <code>libraries=visualization</code> 即可，要是想再加入其他 library 可用 <code>,</code> 逗號隔開。如果沒有載入 visualization 這個 library，熱圖會無法顯示。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></div><div class="line">  <span class="attr">src</span>=<span class="string">"https://maps.googleapis.com/maps/api/js?libraries=visualization&amp;sensor=true_or_false"</span>&gt;<span class="undefined"></span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>再來，因爲熱圖其實是一連串 <strong>座標點</strong> 與 <strong>數值</strong> 的集合，所以我們要先準備好一個陣列來存放 LatLng 物件的集合：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 存放 google.maps.LatLng 物件的陣列</span></div><div class="line"><span class="keyword">var</span> heatmapData = [</div><div class="line">  <span class="keyword">new</span> google.maps.LatLng(<span class="number">37.782</span>, <span class="number">-122.447</span>),</div><div class="line">  <span class="keyword">new</span> google.maps.LatLng(<span class="number">37.782</span>, <span class="number">-122.445</span>),</div><div class="line">true<span class="comment">// 以下略 ...</span></div><div class="line">];</div><div class="line"></div><div class="line"><span class="comment">// 產生一個 Heatmap Layer</span></div><div class="line"><span class="keyword">var</span> heatmap = <span class="keyword">new</span> google.maps.visualization.HeatmapLayer(&#123;</div><div class="line">  data: heatmapData</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 將 heatmap 圖層加入至 map</span></div><div class="line">heatmap.setMap(map);</div></pre></td></tr></table></figure>
<p>如果想要改變熱圖樣式的話也很簡單，有兩種方式，第一種是在 <code>new google.maps.visualization.HeatmapLayer</code> 時加入樣式的設定，如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> heatmap = <span class="keyword">new</span> google.maps.visualization.HeatmapLayer(&#123;</div><div class="line">  data: heatmapData,</div><div class="line">  gradient: [<span class="string">'transparent'</span>, <span class="string">'#f00'</span>, <span class="string">'#0f0'</span>, <span class="string">'#00f'</span>],	<span class="comment">// 指定顏色範圍 ex:透明, 紅, 綠, 藍</span></div><div class="line">  radius: <span class="number">10</span>,				<span class="comment">// 每個點的半徑 (單位 px)</span></div><div class="line">  opacity: <span class="number">0.5</span>			<span class="comment">// 熱圖圖層透明度 (0 ~ 1)</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>或是想改變已載入熱圖的樣式，可以透過 <code>heatmap.set()</code> :
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 改變範圍顏色</span></div><div class="line">heatmap.set(<span class="string">'gradient'</span>, [<span class="string">'transparent'</span>, <span class="string">'#f00'</span>, <span class="string">'#0f0'</span>, <span class="string">'#00f'</span>]);</div><div class="line"></div><div class="line"><span class="comment">// 改變透明度</span></div><div class="line">heatmap.set(<span class="string">'opacity'</span>, <span class="number">0.5</span>);</div></pre></td></tr></table></figure></p>
<p>完整範例可以參考 Google Heat Map 文件：
<a href="https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap</a></p>
<p>接著，同場加映。</p>
<p>如果今天我們有一份完整的 GeoJSON (關於 GeoJSON 可參考<a href="http://kuro.tw/posts/2015/04/28/through-the-google-maps-api-geojson-data">前篇 GeoJSON 介紹</a>)文件，是否可以直接生成熱圖？ 當然沒問題。</p>
<p>我們只要將取得的 GeoJSON 解析出來，並存入陣列內就可以輕鬆地生成熱圖。</p>
<p>這是 GeoJSON 範例的格式，可以看出來這是一個 Point，而且有個屬性 valueCount，值為 5。
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"type"</span>: <span class="string">"Feature"</span>,</div><div class="line">  <span class="string">"geometry"</span>: &#123;</div><div class="line">      <span class="string">"type"</span>: <span class="string">"Point"</span>,</div><div class="line">      <span class="string">"coordinates"</span>: [<span class="number">121.52803907522677</span>, <span class="number">25.036051507818932</span>]</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"properties"</span>: &#123; <span class="string">"valueCount"</span>: <span class="number">5</span> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 畫熱圖</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw_heatmap</span>(<span class="params">results</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> heatmapData = [];</div><div class="line"></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; results.features.length; i++) &#123;</div><div class="line">    <span class="comment">// 取得座標</span></div><div class="line">    <span class="keyword">var</span> coords = results.features[i].geometry.coordinates;</div><div class="line">    <span class="comment">// 要注意： LatLng 物件的經緯度順序與 GeoJSON 的座標順序相反</span></div><div class="line">    <span class="keyword">var</span> latLng = <span class="keyword">new</span> google.maps.LatLng(coords[<span class="number">1</span>], coords[<span class="number">0</span>]);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> weightedLoc = &#123;</div><div class="line">      <span class="comment">// 位置</span></div><div class="line">      location: latLng,</div><div class="line">      <span class="comment">// 單位強度，這裏由 GeoJSON 內的 valueCount 屬性取得</span></div><div class="line">      weight: results.features[i].properties.valueCount</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    heatmapData.push(weightedLoc);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">true<span class="comment">// 生成熱圖圖層</span></div><div class="line">  <span class="keyword">var</span> heatmap = <span class="keyword">new</span> google.maps.visualization.HeatmapLayer(&#123;</div><div class="line">    data: heatmapData,</div><div class="line">    dissipating: <span class="literal">true</span>,</div><div class="line">    map: map,</div><div class="line">    radius: <span class="number">40</span>,</div><div class="line">    gradient: [<span class="string">'transparent'</span>, <span class="string">'#f00'</span>, <span class="string">'#0f0'</span>, <span class="string">'#00f'</span>]</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/262458/jE7EkvSumXUFaRKArSMw_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-29%20%E4%B8%8B%E5%8D%883.50.00.png" alt="螢幕快照 2015-04-29 下午3.50.00.png">
DEMO: <a href="http://jsbin.com/xafagi/1/" target="_blank" rel="external">http://jsbin.com/xafagi/1/</a></p>
<p>如果想要 debug 確認生成的熱圖是否正確，因為我們是利用 GeoJSON 產生熱圖，所以我們可以透過 <code>map.data.addGeoJson( geoJson );</code> 來加入 marker 供我們確認。
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/262458/iU5KQsFgRQKTwgEjNraG_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-29%20%E4%B8%8B%E5%8D%883.59.13.png" alt="螢幕快照 2015-04-29 下午3.59.13.png">
DEMO: <a href="http://jsbin.com/xafagi/2/" target="_blank" rel="external">http://jsbin.com/xafagi/2/</a></p>
<p>參考資料：
<a href="https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap</a>
<a href="https://developers.google.com/maps/documentation/javascript/heatmaplayer" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/heatmaplayer</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[透過 Google Maps API 處理 GeoJSON 資料]]></title>
      <url>http://kuro.tw/posts/2015/04/28/through-the-google-maps-api-geojson-data/</url>
      <content type="html"><![CDATA[<p>在說明 Google Map 如何存取 GeoJSON 前，先來簡單介紹 GeoJSON。</p>
<p><a href="http://geojson.org/" title="GeoJSON" target="_blank" rel="external">GeoJSON</a> 是一種專門處理地理資訊 (GIS) 結構的 JSON 標準格式。 一個 GeoJSON 物件可以用來代表<strong>點</strong> (Point)，<strong>線</strong> (LineString)，<strong>多邊形</strong> (Polygon) 等等的幾何結構，以及<strong>特徵</strong> (Feature) 的集合，或是<strong>一系列的特徵</strong> (FeatureCollection)。</p>
<p>也因為 GeoJSON 是一種基於 JSON 的公開標準，其結構簡單且容易讀取的特性也廣受開發者的歡迎，有不少開發程式庫開始支援 GeoJSON 的處理，也有許多政府開放資料(官方或非官方)開始提供 GeoJSON 作為其資料格式。</p>
<p>一個簡單的 GeoJSON 會長得像這個樣子：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"type"</span>: <span class="string">"FeatureCollection"</span>,</div><div class="line">    <span class="string">"features"</span>: [&#123;</div><div class="line">        <span class="string">"type"</span>: <span class="string">"Feature"</span>,</div><div class="line">        <span class="string">"geometry"</span>: &#123;</div><div class="line">            <span class="string">"type"</span>: <span class="string">"Point"</span>,</div><div class="line">            <span class="string">"coordinates"</span>: [<span class="number">102.0</span>, <span class="number">0.5</span>]</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"properties"</span>: &#123;</div><div class="line">            <span class="string">"prop0"</span>: <span class="string">"value0"</span></div><div class="line">        &#125;</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="string">"type"</span>: <span class="string">"Feature"</span>,</div><div class="line">        <span class="string">"geometry"</span>: &#123;</div><div class="line">            <span class="string">"type"</span>: <span class="string">"LineString"</span>,</div><div class="line">            <span class="string">"coordinates"</span>: [</div><div class="line">                [<span class="number">102.0</span>, <span class="number">0.0</span>],</div><div class="line">                [<span class="number">103.0</span>, <span class="number">1.0</span>],</div><div class="line">                [<span class="number">104.0</span>, <span class="number">0.0</span>],</div><div class="line">                [<span class="number">105.0</span>, <span class="number">1.0</span>]</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"properties"</span>: &#123;</div><div class="line">            <span class="string">"prop0"</span>: <span class="string">"value0"</span>,</div><div class="line">            <span class="string">"prop1"</span>: <span class="number">0.0</span></div><div class="line">        &#125;</div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="string">"type"</span>: <span class="string">"Feature"</span>,</div><div class="line">        <span class="string">"geometry"</span>: &#123;</div><div class="line">            <span class="string">"type"</span>: <span class="string">"Polygon"</span>,</div><div class="line">            <span class="string">"coordinates"</span>: [</div><div class="line">                [</div><div class="line">                    [<span class="number">100.0</span>, <span class="number">0.0</span>],</div><div class="line">                    [<span class="number">101.0</span>, <span class="number">0.0</span>],</div><div class="line">                    [<span class="number">101.0</span>, <span class="number">1.0</span>],</div><div class="line">                    [<span class="number">100.0</span>, <span class="number">1.0</span>],</div><div class="line">                    [<span class="number">100.0</span>, <span class="number">0.0</span>]</div><div class="line">                ]</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"properties"</span>: &#123;</div><div class="line">            <span class="string">"prop0"</span>: <span class="string">"value0"</span>,</div><div class="line">            <span class="string">"prop1"</span>: &#123;</div><div class="line">                <span class="string">"this"</span>: <span class="string">"that"</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如上所示，每一筆資料都會是一個「<strong>Feature</strong>」物件，地理位置相關資訊會存放在 geometry 物件內，其中分別有「<strong>type</strong>」以及「<strong>coordinates</strong>」屬性，type 用來表示資料類別，可以是點，線，甚至是多邊形等；而 coordinates 用來存放經緯度座標。而其他的相關資訊則會放在「<strong>properties</strong>」內，以 <strong>key: value</strong> 方式呈現。</p>
<p>簡單介紹就到此，有興趣的朋友可以參考 <a href="http://geojson.org/" target="_blank" rel="external">http://geojson.org/</a>
註：這裏有中國網友翻譯的 GeoJSON 規格 <a href="http://www.oschina.net/translate/geojson-spec" target="_blank" rel="external">http://www.oschina.net/translate/geojson-spec</a></p>
<p>回到主題。
Google Map 匯入 GeoJSON 的方式非常簡單，如果已經有一個完整的 GeoJSON 檔案的話，那麼透過</p>
<p><code>map.data.loadGeoJson(FILE-URL);</code></p>
<p>利用這一行程式碼就可以載入 GeoJSON 至 Google Map 的 Data Layer 了。</p>
<p>簡單範例：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> map;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">initMap</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 地圖初始設定</span></div><div class="line">    <span class="keyword">var</span> mapOptions = &#123;</div><div class="line">        center: <span class="keyword">new</span> google.maps.LatLng(<span class="number">25.04674</span>, <span class="number">121.54168</span>),</div><div class="line">        zoom: <span class="number">13</span>,</div><div class="line">        mapTypeId: google.maps.MapTypeId.ROADMAP</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="comment">// GeoJSON file</span></div><div class="line">    <span class="keyword">var</span> url = <span class="string">'https://dl.dropboxusercontent.com/u/12537630/geo.json'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> mapElement = <span class="built_in">document</span>.getElementById(<span class="string">"mapDiv"</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Google 地圖初始化</span></div><div class="line">    map = <span class="keyword">new</span> google.maps.Map(mapElement, mapOptions);</div><div class="line"></div><div class="line">    <span class="comment">// 載入 GeoJSON 資料</span></div><div class="line">    map.data.loadGeoJson(url);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>DEMO: <a href="http://jsbin.com/totuzisobo/1/" target="_blank" rel="external">http://jsbin.com/totuzisobo/1/</a>
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/262352/sSKDGsS7RUqG2TluFYJC_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-28%20%E4%B8%8B%E5%8D%887.15.40.png" alt="螢幕快照 2015-04-28 下午7.15.40.png"></p>
<p>如果希望載入的資料可以有自訂的樣式的話，可以透過 <code>map.data.setStyle</code> 在載入前指定好希望的 style，這裏以 marker 的圖示為例：</p>
<p>圖示資訊我放在 GeoJSON 的 <code>properties.icon</code> 內，如下 (其中一筆 point 的內容)：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">"type"</span>: <span class="string">"Feature"</span>,</div><div class="line"><span class="string">"geometry"</span>: &#123;</div><div class="line"> <span class="string">"type"</span>: <span class="string">"Point"</span>,</div><div class="line"> <span class="string">"coordinates"</span>: [ <span class="number">121.51771545410156</span>, <span class="number">25.028294990979614</span> ]</div><div class="line">&#125;,</div><div class="line"><span class="string">"properties"</span>: &#123;</div><div class="line">true<span class="string">"icon"</span>: <span class="string">"http://google-maps-icons.googlecode.com/files/vegetarian.png"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>於是我們可以透過 <code>feature.getProperty(&#39;icon&#39;)</code> 去指定每一筆 point 的圖示：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 自訂樣式</span></div><div class="line">map.data.setStyle(<span class="function"><span class="keyword">function</span>(<span class="params">feature</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> &#123; <span class="string">'icon'</span>: feature.getProperty(<span class="string">'icon'</span>) &#125;;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 載入 GeoJSON 資料</span></div><div class="line">map.data.loadGeoJson(url);</div></pre></td></tr></table></figure>
<p>DEMO: <a href="http://jsbin.com/xikaqe/1/" target="_blank" rel="external">http://jsbin.com/xikaqe/1/</a>
<img src="http://user-image.logdown.io/user/3292/blog/3340/post/262352/u5lfzGXOQVaVY7zkw57q_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-28%20%E4%B8%8B%E5%8D%887.15.46.png" alt="螢幕快照 2015-04-28 下午7.15.46.png"></p>
<p>如果希望透過 ajax 方式載入 GeoJSON 的話也非常簡單，在取得 ajax 回傳資料時，用 <code>map.data.addGeoJson(res);</code> 這行就可以載入資料了。</p>
<p>以 jQuery 為例，如:
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.get(FILE-URL, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123; map.data.addGeoJson(res); &#125;);</div></pre></td></tr></table></figure></p>
<p>有個整理好的 GeoJSON，只需要一行就可以很輕鬆地在 Google Map 產生想要的圖標了。
如果想在圖表上處理點擊等等的事件，還是得另外處理喔。</p>
<p>參考資料:
<a href="https://developers.google.com/maps/documentation/javascript/examples/layer-data-simple" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/examples/layer-data-simple</a>
<a href="https://developers.google.com/maps/documentation/javascript/examples/layer-data-quakes" target="_blank" rel="external">https://developers.google.com/maps/documentation/javascript/examples/layer-data-quakes</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[透過 Google map Geocoder API 以經緯度轉換地址資訊]]></title>
      <url>http://kuro.tw/posts/2015/04/27/address-information-is-obtained-through-google-map-geocoder-with-the-latitude-and-longitude/</url>
      <content type="html"><![CDATA[<p>前陣子因為需求的關係，需要以經緯度來轉換地址，幸好 Google map API 有提供 Geocoder 可以轉換大略地址的服務。使用方式非常簡單，我們這裡以立法院的經緯度 (25.0439892, 121.5212213) 為例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> geocoder = <span class="keyword">new</span> google.maps.Geocoder();</div><div class="line"></div><div class="line"><span class="comment">// google.maps.LatLng 物件</span></div><div class="line"><span class="keyword">var</span> coord = <span class="keyword">new</span> google.maps.LatLng(<span class="number">25.0439892</span>, <span class="number">121.5212213</span>);</div><div class="line"></div><div class="line"><span class="comment">// 傳入 latLng 資訊至 geocoder.geocode</span></div><div class="line">geocoder.geocode(&#123;<span class="string">'latLng'</span>: coord &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">results, status</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (status === google.maps.GeocoderStatus.OK) &#123;</div><div class="line">    <span class="comment">// 如果有資料就會回傳</span></div><div class="line">    <span class="keyword">if</span> (results) &#123;</div><div class="line">      <span class="built_in">console</span>.log(results[<span class="number">0</span>]);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// 經緯度資訊錯誤</span></div><div class="line">  <span class="keyword">else</span> &#123;</div><div class="line">    alert(<span class="string">"Reverse Geocoding failed because: "</span> + status);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>我們傳入經緯度資訊 google.maps.LatLng 物件，透過 <code>geocoder.geocode</code> 轉換出來的結果會是這樣的：</p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/262289/0bIqy71dT8Sb3YwERlEs_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-27%20%E4%B8%8B%E5%8D%8810.42.56.png" alt="螢幕快照 2015-04-27 下午10.42.56.png"></p>
<p>如上圖，Google map Geocoder API 會回傳一連串的地址資訊，如果你需要的是已經整合好格式的地址，那麼將上面範例中的<code>results[0]</code> 改為 <code>results[0].formatted_address</code> 就可以取得「<strong>100台灣台北市中正區青島東路1號</strong>」這樣的地址資訊了。</p>
<p>下面提供一個完整的範例供各位參考：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> map, geocoder, popup;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">initMap</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    geocoder = <span class="keyword">new</span> google.maps.Geocoder();</div><div class="line">    popup = <span class="keyword">new</span> google.maps.InfoWindow();</div><div class="line"></div><div class="line">    <span class="comment">// 地圖初始設定</span></div><div class="line">    <span class="keyword">var</span> mapOptions = &#123;</div><div class="line">        center: <span class="keyword">new</span> google.maps.LatLng(<span class="number">25.04674</span>, <span class="number">121.52168</span>),</div><div class="line">        zoom: <span class="number">16</span>,</div><div class="line">        mapTypeId: google.maps.MapTypeId.ROADMAP</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> mapElement = <span class="built_in">document</span>.getElementById(<span class="string">"mapDiv"</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Google 地圖初始化</span></div><div class="line">    map = <span class="keyword">new</span> google.maps.Map(mapElement, mapOptions);</div><div class="line"></div><div class="line">    <span class="comment">// 設定 Google map 繪圖控制項</span></div><div class="line">    <span class="keyword">var</span> drawingManager = <span class="keyword">new</span> google.maps.drawing.DrawingManager(&#123;</div><div class="line">        drawingMode: <span class="literal">null</span>,</div><div class="line">        drawingControl: <span class="literal">true</span>,</div><div class="line">        drawingControlOptions: &#123;</div><div class="line">            position: google.maps.ControlPosition.TOP_CENTER,</div><div class="line">            drawingModes: [google.maps.drawing.OverlayType.MARKER]</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="comment">// 開啟 Google map 繪圖控制項</span></div><div class="line">    drawingManager.setMap(map);</div><div class="line"></div><div class="line">    <span class="comment">// 在地圖中加入 marker</span></div><div class="line">    google.maps.event.addListener(drawingManager, <span class="string">'markercomplete'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">marker</span>) </span>&#123;</div><div class="line">        <span class="comment">// 取得 marker 的經緯座標</span></div><div class="line">        <span class="keyword">var</span> markerPosition = marker.getPosition();</div><div class="line"></div><div class="line">        <span class="comment">// 將經緯度透過 Google map Geocoder API 反查地址</span></div><div class="line">        geocoder.geocode(&#123;</div><div class="line">          <span class="string">'latLng'</span>: markerPosition</div><div class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">results, status</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (status === google.maps.GeocoderStatus.OK) &#123;</div><div class="line">                <span class="keyword">if</span> (results) &#123;</div><div class="line">                    <span class="comment">// 將取得的資訊傳入 marker 訊息泡泡</span></div><div class="line">                    showAddress(results[<span class="number">0</span>], marker);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                alert(<span class="string">"Reverse Geocoding failed because: "</span> + status);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="comment">// 設定 marker 的訊息泡泡</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showAddress</span>(<span class="params">result, marker</span>) </span>&#123;</div><div class="line">        map.setCenter(marker.getPosition());</div><div class="line">        <span class="comment">// 顯示傳入的地址資訊</span></div><div class="line">        <span class="keyword">var</span> popupContent = <span class="string">'&lt;b&gt;地址: &lt;/b&gt; '</span> + result.formatted_address;</div><div class="line">        popup.setContent(popupContent);</div><div class="line">        popup.open(map, marker);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://user-image.logdown.io/user/3292/blog/3340/post/262289/boE1unBmQsCitdOxHG01_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-27%20%E4%B8%8B%E5%8D%8810.52.20.png" alt="螢幕快照 2015-04-27 下午10.52.20.png"></p>
<p>Demo: <a href="http://jsbin.com/penuqofabe/1/" target="_blank" rel="external">http://jsbin.com/penuqofabe/1/</a></p>
<p>參考網址: <a href="https://developers.google.com/maps/documentation/javascript/geocoding?hl=zh-tw" target="_blank" rel="external">Google Map 地理編碼服務</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[note] jQuery 與 d3.js 的一些不同之處]]></title>
      <url>http://kuro.tw/posts/2015/04/22/note-jquery-and-d3js-some-of-these-differences/</url>
      <content type="html"><![CDATA[<p>以前跟人家介紹 d3.js 的時候，我都會笑稱 d3.js 其實就是 SVG 界的 jQuery。
但是最近發現不少人對兩者的 select 以及 append 有些疑問，特別把它寫下來紀錄。</p>
<p>先說大家比較熟悉的 jQuery：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>)</div><div class="line">  .append(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>)</div><div class="line">  .append(<span class="string">"&lt;em&gt;&lt;/em&gt;"</span>);</div></pre></td></tr></table></figure>
<p>上面這段程式碼產生的 HTML 應該會是這樣的</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>而在 d3.js 的情況：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">d3.select(<span class="string">"body"</span>)</div><div class="line">  .append(<span class="string">"div"</span>)</div><div class="line">    .append(<span class="string">"em"</span>);</div></pre></td></tr></table></figure>
<p>所產生的 HTML 結構會是這樣的：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>兩者最大的差異點在於 jQuery 的
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>).append(...)</div></pre></td></tr></table></figure></p>
<p>回傳的會是 $(&#39;body&#39;) 本身，而 d3.js 的</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d3.select(<span class="string">"body"</span>).append(...)</div></pre></td></tr></table></figure>
<p>回傳的會是 append 後的 DOM
(以上面的範例來說，<code>d3.select(&quot;body&quot;).append(&#39;div&#39;)</code> 回傳的就會是 <code>&lt;div&gt;&lt;/div&gt;</code> )，
所以再次執行 append 時，就會將 DOM 加入在前一個 append 的元素，也就是 <code>&lt;div&gt;&lt;/div&gt;</code> 之內。</p>
<p>那麼 jQuery 是否也可以像 d3.js 這樣 append 在新 DOM 內呢？
先將 em 包在 div 內，最外層再包一層 append 就可以做到了。
像這樣：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>).append( $(<span class="string">'&lt;div&gt;'</span>).append( $(<span class="string">'&lt;em&gt;'</span>) ) );</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[偵測 Google Map 的 InfoWindow 訊息框是否被開啟 (v3)]]></title>
      <url>http://kuro.tw/posts/2014/08/08/google-map-infowindow-bubble-detection-box-is-opened/</url>
      <content type="html"><![CDATA[<p>因為 Google Map 的 InfoWindow 是被新增出來的物件，所以我們可以透過修改 prototype 的方式，替 InfoWindow 增加新的 method。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">google.maps.InfoWindow.prototype.isOpen = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> map = <span class="keyword">this</span>.getMap();</div><div class="line">  <span class="keyword">return</span> (map !== <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> map !== <span class="string">"undefined"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> popup = <span class="keyword">new</span> google.maps.InfoWindow();</div><div class="line">popup.isOpen();  <span class="comment">// will return ture or false.</span></div></pre></td></tr></table></figure>
<p>參考資料： <a href="http://stackoverflow.com/a/12410385" target="_blank" rel="external">http://stackoverflow.com/a/12410385</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[PHP] 將 HTML5 Canvas 產生的圖片上傳至伺服器端處理]]></title>
      <url>http://kuro.tw/posts/2013/09/08/php-html5-canvas-resulting-base64-datauri-images-will-be-uploaded-to-the-server-side-processing/</url>
      <content type="html"><![CDATA[<p>一般來說有兩種處理方式：</p>
<h2 id="直接把-DataURI-字串儲存起來，等要用的時候直接輸出至-lt-img-gt-的-src-屬性或是-CSS-中："><a href="#直接把-DataURI-字串儲存起來，等要用的時候直接輸出至-lt-img-gt-的-src-屬性或是-CSS-中：" class="headerlink" title="直接把 DataURI 字串儲存起來，等要用的時候直接輸出至 &lt;img&gt; 的 src 屬性或是 CSS 中："></a>直接把 DataURI 字串儲存起來，等要用的時候直接輸出至 <code>&lt;img&gt;</code> 的 src 屬性或是 CSS 中：</h2><p>  像這樣：</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;?php echo $base64_img_string; ?&gt;"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>  實際執行的時候會長得像這樣：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"data:image/png;base64,......(後略)"</span> /&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>優點：
簡單易用，幾乎不需要做任何處理。
HTTP Request 變少，傳送一個大檔案會比連續傳送多個拆解的小檔更快速有效率，且節省頻寬。</li>
</ul>
<ul>
<li>缺點：
IE7 以前的版本不支援 DataURI 格式。 IE8 開始雖然有支援，但限制大小不可超過 32KB
圖檔大的時候產生的 DataURI String 大得驚人(比原本的圖檔還大約 1/3)
圖檔修改後必須要重新編碼，相對的嵌入 DataURI String 的網頁也都要跟著修正
因圖片跟網頁綁再一起，不利快取</li>
</ul>
<h2 id="將-base64-DataURI-送到-PHP-端儲存成圖片後使用："><a href="#將-base64-DataURI-送到-PHP-端儲存成圖片後使用：" class="headerlink" title="將 base64 DataURI 送到 PHP 端儲存成圖片後使用："></a>將 base64 DataURI 送到 PHP 端儲存成圖片後使用：</h2><p>  如標題，應該不需要多加解釋了，就是利用 <code>base64_decode()</code> 將 data uri 反解，
  直接看 code。 PHP 的部分：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">  <span class="comment">// 設定圖檔上傳路徑</span></div><div class="line">  define(<span class="string">'UPLOAD_PATH'</span>, <span class="string">'images/'</span>);</div><div class="line"></div><div class="line">  <span class="comment">// 接收 POST 進來的 base64 DtatURI String</span></div><div class="line">  $img = $_POST[<span class="string">'data'</span>];</div><div class="line"></div><div class="line">  <span class="comment">// 轉檔 &amp; 存檔</span></div><div class="line">  $img = str_replace(<span class="string">'data:image/png;base64,'</span>, <span class="string">''</span>, $img);</div><div class="line">  $img = str_replace(<span class="string">' '</span>, <span class="string">'+'</span>, $img);</div><div class="line">  $data = base64_decode($img);</div><div class="line">  $file = UPLOAD_PATH . uniqid() . <span class="string">'.png'</span>;</div><div class="line">  $success = file_put_contents($file, $data);</div><div class="line"></div><div class="line">  <span class="comment">// output string</span></div><div class="line">  $output = ($success) ? <span class="string">'&lt;img src="'</span>. $file .<span class="string">'" alt="Canvas Image" /&gt;'</span> : <span class="string">'&lt;p&gt;Unable to save the file.&lt;/p&gt;'</span>;</div></pre></td></tr></table></figure>
<p>  View 的部分 (HTML)：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>PHP base64 image decode demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 成功存檔的話會秀出 img 標籤以及圖檔，失敗的話會出現 Unable to save the file 的訊息 --&gt;</span></div><div class="line">    <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">print</span> $output; <span class="meta">?&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>這樣就完成了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[淺談 ECMAScript 5 嚴格模式 (Strict Mode) ]]></title>
      <url>http://kuro.tw/posts/2011/11/28/ecmascript-5-strict-mode/</url>
      <content type="html"><![CDATA[<p>自 ECMAScript 5 開始，增加了一個 嚴格模式 (Strict Mode) 的新特性。</p>
<p>ECMAScript 5 雖然可以跟前一版的 ECMAScript 3 相容 (ECMAScript 4 已廢棄)，但是，當我們宣告為 &quot;Strict Mode&quot; 後，那些 ECMAScript 5 不再建議使用的 ECMAScript 3 的舊語法會被全面禁止。
一旦出現，便會出現錯誤或拋出異常 (Exception)。</p>
<p>Strict Mode 的宣告方式有兩種：</p>
<p>若要在全域範圍內宣告使用 Strict Mode，只需在程式碼的第一行加上下面敘述，如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div></pre></td></tr></table></figure>
<p>也可以在指定的函數內宣告使用 Strict Mode，在函數的第一行加上下面敘述，如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Non-strict code...</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">func_UseStrictMode</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="meta">  "use strict"</span>;</div><div class="line">   <span class="comment">// ... your code ...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因為宣告使用 Strict Mode 時只需要加入一段 &quot;use strict&quot;; 敘述式，所以不會對些舊時的瀏覽器造成任何相容性的問題。 再來簡單介紹一下 Strict Mode 與非 Strict Mode 的差異：</p>
<p><strong>變數：</strong>
JavaScript 使用變數的時候不一定要先宣告 (若直接使用未宣告的變數會自動變成全域變數，強烈不建議!) ，但在 Strict Mode 下，變數使用前必須要先用 var 宣告後才能拿來用，否則會出現錯誤。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">  i = <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (err) &#123;</div><div class="line">  alert(err);    <span class="comment">// throw exception !</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>另外，在 Strict Mode 下刪除全域變數、函數，或是函數內的參數都會被認為是錯誤的語法。
如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="number">1</span>;</div><div class="line"><span class="keyword">var</span> myfunc = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; &#125;;</div><div class="line"><span class="keyword">delete</span> i;         <span class="comment">// Error !</span></div><div class="line"><span class="keyword">delete</span> myfunc;    <span class="comment">// Error !</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfunc2</span>(<span class="params">arg</span>) </span>&#123;</div><div class="line">    <span class="keyword">delete</span> arg;    <span class="comment">// Error !</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>屬性</strong>：
在定義物件的屬性時，屬性名稱不可重複，同一個物件內不能重複定義相同屬性，否則會出現異常：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line">&#123;</div><div class="line">  foo: <span class="literal">true</span>,</div><div class="line">  foo: <span class="literal">false</span>;     <span class="comment">// Error</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>函數與參數</strong>：
在 Strict Mode 下，函數的參數 (arguments) 不能有相同名稱的變數，如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params">arg1, arg2</span>) </span>&#123; &#125;    <span class="comment">// OK</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">func2</span>(<span class="params">arg, arg</span>) </span>&#123; &#125;      <span class="comment">// Error</span></div></pre></td></tr></table></figure>
<p>同時，函數的 arguments 屬性在 Strict Mode 下也是唯讀的：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">arg</span>) </span>&#123;</div><div class="line">  <span class="built_in">arguments</span> = [<span class="string">"..."</span>];    <span class="comment">// not allow, Error.</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>另外，對 arguments.caller 和 arguments.callee 的存取會出現錯誤。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">true<span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  	<span class="comment">// Don't exist, either</span></div><div class="line">    test.arguments = ...;		<span class="comment">// Error</span></div><div class="line">    inner.caller = ...;			<span class="comment">// Error</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因此，任何需要用到的匿名函數都必須先命名，例如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">later</span>(<span class="params"></span>)</span>&#123;</div><div class="line">true<span class="comment">// do stuff...</span></div><div class="line">truesetTimeout( later, <span class="number">1000</span> );</div><div class="line">&#125;, <span class="number">1000</span> );</div></pre></td></tr></table></figure>
<p>最後，當使用 null 或者 undefined 作為 Function.prototype.call 或 Function.prototype.apply 方法的第一個參數時，函數內部的 this 將會指向 global object。</p>
<p>而 Strict mode 將會阻止其執行並拋出異常：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; ... &#125;).call( <span class="literal">null</span> );		<span class="comment">// Exception</span></div></pre></td></tr></table></figure>
<p><strong>eval</strong>：
eval 是保留的關鍵字，不能作為變數名、函數名、物件的屬性，甚至是變數都不行。
所以，以下的程式碼<strong>全都是錯誤</strong>的：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// All generate errors...</span></div><div class="line">obj.eval = ...</div><div class="line">obj.foo = <span class="built_in">eval</span>;</div><div class="line"><span class="keyword">var</span> <span class="built_in">eval</span> = ...;</div><div class="line"></div><div class="line"><span class="keyword">for</span> ( <span class="keyword">var</span> <span class="built_in">eval</span> <span class="keyword">in</span> ... ) &#123;&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">eval</span>)</span>&#123;&#125;</div><div class="line"><span class="function"><span class="keyword">function</span>(<span class="params">eval</span>)</span>&#123;&#125;</div><div class="line"><span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"eval"</span>)</div></pre></td></tr></table></figure>
<p>另外，在 Strict mode 透過 eval 引入的變數也會無效，如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">eval</span>(<span class="string">"var a = false;"</span>);</div><div class="line">print( <span class="keyword">typeof</span> a );			<span class="comment">// undefined.</span></div></pre></td></tr></table></figure>
<p><strong>with() { }</strong>：
在 Strict mode 下沒有這個東西了，如果使用的話會被認為語法錯誤。</p>
<p><strong>其他</strong>：
在 Strict mode 下，不再支援 8 進位數字。
實際在 Firefox 8 測試的結果，會出現 &quot;octal literals and octal escape sequences are deprecated&quot; 的錯誤：在非 Strict mode 下，010 則是會 alert 出 8 這個數字。</p>
]]></content>
    </entry>
    
  
  
</search>
